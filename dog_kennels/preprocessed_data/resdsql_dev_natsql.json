[
  {
    "db_id": "dog_kennels",
    "input_sequence": "How many dogs have not gone through any treatment? | treatments : treatments.dog_id , treatments.treatment_id , treatments.treatment_type_code , treatments.date_of_treatment , treatments.professional_id , treatments.* | dogs : dogs.dog_id , dogs.abandoned_yn , dogs.owner_id , dogs.name , dogs.breed_code , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.*",
    "output_sequence": "select count ( _ ) from _ where @.@ not in _ | select count ( dogs.* ) from dogs where @.@ not in treatments.*",
    "tc_original": [
      "treatments.dog_id",
      "treatments.treatment_id",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "treatments.professional_id",
      "treatments.*",
      "dogs.dog_id",
      "dogs.abandoned_yn",
      "dogs.owner_id",
      "dogs.name",
      "dogs.breed_code",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "treatment_types.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Tell me the number of dogs that have not received any treatment . | treatments : treatments.dog_id , treatments.treatment_id , treatments.treatment_type_code , treatments.date_of_treatment , treatments.professional_id , treatments.* | dogs : dogs.dog_id , dogs.abandoned_yn , dogs.owner_id , dogs.breed_code , dogs.name , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.* | breeds : breeds.breed_code , breeds.breed_name , breeds.*",
    "output_sequence": "select count ( _ ) from _ where @.@ not in _ | select count ( dogs.* ) from dogs where @.@ not in treatments.*",
    "tc_original": [
      "treatments.dog_id",
      "treatments.treatment_id",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "treatments.professional_id",
      "treatments.*",
      "dogs.dog_id",
      "dogs.abandoned_yn",
      "dogs.owner_id",
      "dogs.breed_code",
      "dogs.name",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "breeds.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "How many owners temporarily do not have any dogs? | owners : owners.owner_id , owners.first_name , owners.last_name , owners.home_phone , owners.email_address , owners.* | dogs : dogs.owner_id , dogs.abandoned_yn , dogs.dog_id , dogs.name , dogs.age , dogs.* | professionals : professionals.street , professionals.city , professionals.state , professionals.professional_id , professionals.role_code , professionals.* | breeds : breeds.breed_code , breeds.breed_name , breeds.*",
    "output_sequence": "select count ( _ ) from _ where @.@ not in _ | select count ( owners.* ) from owners where @.@ not in dogs.*",
    "tc_original": [
      "owners.owner_id",
      "owners.first_name",
      "owners.last_name",
      "owners.home_phone",
      "owners.email_address",
      "owners.*",
      "dogs.owner_id",
      "dogs.abandoned_yn",
      "dogs.dog_id",
      "dogs.name",
      "dogs.age",
      "dogs.*",
      "professionals.street",
      "professionals.city",
      "professionals.state",
      "professionals.professional_id",
      "professionals.role_code",
      "professionals.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "breeds.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the number of owners who do not own any dogs at this moment. | dogs : dogs.owner_id , dogs.abandoned_yn , dogs.date_adopted , dogs.date_arrived , dogs.date_departed , dogs.* | owners : owners.owner_id , owners.first_name , owners.last_name , owners.email_address , owners.home_phone , owners.* | professionals : professionals.street , professionals.city , professionals.state , professionals.professional_id , professionals.role_code , professionals.* | breeds : breeds.breed_name , breeds.breed_code , breeds.*",
    "output_sequence": "select count ( _ ) from _ where @.@ not in _ | select count ( owners.* ) from owners where @.@ not in dogs.*",
    "tc_original": [
      "dogs.owner_id",
      "dogs.abandoned_yn",
      "dogs.date_adopted",
      "dogs.date_arrived",
      "dogs.date_departed",
      "dogs.*",
      "owners.owner_id",
      "owners.first_name",
      "owners.last_name",
      "owners.email_address",
      "owners.home_phone",
      "owners.*",
      "professionals.street",
      "professionals.city",
      "professionals.state",
      "professionals.professional_id",
      "professionals.role_code",
      "professionals.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "breeds.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "How many professionals did not operate any treatment on dogs? | treatments : treatments.professional_id , treatments.dog_id , treatments.treatment_id , treatments.treatment_type_code , treatments.date_of_treatment , treatments.* | professionals : professionals.professional_id , professionals.cell_number , professionals.first_name , professionals.email_address , professionals.home_phone , professionals.* | dogs : dogs.name , dogs.age , dogs.gender , dogs.weight , dogs.dog_id , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.*",
    "output_sequence": "select count ( _ ) from _ where @.@ not in _ | select count ( professionals.* ) from professionals where @.@ not in treatments.*",
    "tc_original": [
      "treatments.professional_id",
      "treatments.dog_id",
      "treatments.treatment_id",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "treatments.*",
      "professionals.professional_id",
      "professionals.cell_number",
      "professionals.first_name",
      "professionals.email_address",
      "professionals.home_phone",
      "professionals.*",
      "dogs.name",
      "dogs.age",
      "dogs.gender",
      "dogs.weight",
      "dogs.dog_id",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the number of professionals who have not treated any dogs. | treatments : treatments.professional_id , treatments.dog_id , treatments.treatment_id , treatments.treatment_type_code , treatments.date_of_treatment , treatments.* | professionals : professionals.professional_id , professionals.role_code , professionals.first_name , professionals.home_phone , professionals.cell_number , professionals.* | dogs : dogs.name , dogs.age , dogs.gender , dogs.weight , dogs.dog_id , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.*",
    "output_sequence": "select count ( _ ) from _ where @.@ not in _ | select count ( professionals.* ) from professionals where @.@ not in treatments.*",
    "tc_original": [
      "treatments.professional_id",
      "treatments.dog_id",
      "treatments.treatment_id",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "treatments.*",
      "professionals.professional_id",
      "professionals.role_code",
      "professionals.first_name",
      "professionals.home_phone",
      "professionals.cell_number",
      "professionals.*",
      "dogs.name",
      "dogs.age",
      "dogs.gender",
      "dogs.weight",
      "dogs.dog_id",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables. | dogs : dogs.abandoned_yn , dogs.name , dogs.age , dogs.weight , dogs.gender , dogs.* | owners : owners.street , owners.city , owners.state , owners.first_name , owners.last_name , owners.* | professionals : professionals.street , professionals.city , professionals.state , professionals.first_name , professionals.zip_code , professionals.* | breeds : breeds.breed_name , breeds.breed_code , breeds.*",
    "output_sequence": "select _ from _ where _ | select dogs.name , dogs.age , dogs.weight from dogs where dogs.abandoned_yn = 1",
    "tc_original": [
      "dogs.abandoned_yn",
      "dogs.name",
      "dogs.age",
      "dogs.weight",
      "dogs.gender",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.first_name",
      "owners.last_name",
      "owners.*",
      "professionals.street",
      "professionals.city",
      "professionals.state",
      "professionals.first_name",
      "professionals.zip_code",
      "professionals.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "breeds.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What is the average age of all the dogs? | dogs : dogs.age , dogs.name , dogs.dog_id , dogs.gender , dogs.weight , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.* | professionals : professionals.street , professionals.city , professionals.state , professionals.role_code , professionals.first_name , professionals.* | breeds : breeds.breed_name , breeds.breed_code , breeds.*",
    "output_sequence": "select avg ( _ ) from _ | select avg ( dogs.age ) from dogs",
    "tc_original": [
      "dogs.age",
      "dogs.name",
      "dogs.dog_id",
      "dogs.gender",
      "dogs.weight",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*",
      "professionals.street",
      "professionals.city",
      "professionals.state",
      "professionals.role_code",
      "professionals.first_name",
      "professionals.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "breeds.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Compute the average age of all the dogs. | dogs : dogs.age , dogs.name , dogs.dog_id , dogs.gender , dogs.weight , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.* | professionals : professionals.street , professionals.city , professionals.state , professionals.role_code , professionals.first_name , professionals.* | breeds : breeds.breed_name , breeds.breed_code , breeds.*",
    "output_sequence": "select avg ( _ ) from _ | select avg ( dogs.age ) from dogs",
    "tc_original": [
      "dogs.age",
      "dogs.name",
      "dogs.dog_id",
      "dogs.gender",
      "dogs.weight",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*",
      "professionals.street",
      "professionals.city",
      "professionals.state",
      "professionals.role_code",
      "professionals.first_name",
      "professionals.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "breeds.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What is the age of the oldest dog? | dogs : dogs.age , dogs.date_of_birth , dogs.name , dogs.gender , dogs.dog_id , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.* | professionals : professionals.street , professionals.city , professionals.state , professionals.role_code , professionals.first_name , professionals.* | breeds : breeds.breed_name , breeds.breed_code , breeds.*",
    "output_sequence": "select max ( _ ) from _ | select max ( dogs.age ) from dogs",
    "tc_original": [
      "dogs.age",
      "dogs.date_of_birth",
      "dogs.name",
      "dogs.gender",
      "dogs.dog_id",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*",
      "professionals.street",
      "professionals.city",
      "professionals.state",
      "professionals.role_code",
      "professionals.first_name",
      "professionals.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "breeds.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Tell me the age of the oldest dog. | dogs : dogs.age , dogs.name , dogs.date_of_birth , dogs.gender , dogs.dog_id , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.* | professionals : professionals.street , professionals.city , professionals.state , professionals.role_code , professionals.first_name , professionals.* | breeds : breeds.breed_name , breeds.breed_code , breeds.*",
    "output_sequence": "select max ( _ ) from _ | select max ( dogs.age ) from dogs",
    "tc_original": [
      "dogs.age",
      "dogs.name",
      "dogs.date_of_birth",
      "dogs.gender",
      "dogs.dog_id",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*",
      "professionals.street",
      "professionals.city",
      "professionals.state",
      "professionals.role_code",
      "professionals.first_name",
      "professionals.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "breeds.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "How much does each charge type costs? List both charge type and amount. | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | dogs : dogs.name , dogs.age , dogs.gender , dogs.weight , dogs.dog_id , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.* | professionals : professionals.street , professionals.city , professionals.state , professionals.first_name , professionals.zip_code , professionals.*",
    "output_sequence": "select _ from _ | select charges.charge_type , charges.charge_amount from charges",
    "tc_original": [
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "charges.*",
      "dogs.name",
      "dogs.age",
      "dogs.gender",
      "dogs.weight",
      "dogs.dog_id",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*",
      "professionals.street",
      "professionals.city",
      "professionals.state",
      "professionals.first_name",
      "professionals.zip_code",
      "professionals.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "List each charge type and its amount. | charges : charges.charge_amount , charges.charge_type , charges.charge_id , charges.* | dogs : dogs.name , dogs.age , dogs.gender , dogs.weight , dogs.date_of_birth , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.* | professionals : professionals.street , professionals.city , professionals.state , professionals.first_name , professionals.zip_code , professionals.*",
    "output_sequence": "select _ from _ | select charges.charge_type , charges.charge_amount from charges",
    "tc_original": [
      "charges.charge_amount",
      "charges.charge_type",
      "charges.charge_id",
      "charges.*",
      "dogs.name",
      "dogs.age",
      "dogs.gender",
      "dogs.weight",
      "dogs.date_of_birth",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*",
      "professionals.street",
      "professionals.city",
      "professionals.state",
      "professionals.first_name",
      "professionals.zip_code",
      "professionals.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "How much does the most expensive charge type costs? | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | dogs : dogs.name , dogs.age , dogs.gender , dogs.weight , dogs.dog_id , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.* | professionals : professionals.street , professionals.city , professionals.state , professionals.role_code , professionals.first_name , professionals.*",
    "output_sequence": "select max ( _ ) from _ | select max ( charges.charge_amount ) from charges",
    "tc_original": [
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "charges.*",
      "dogs.name",
      "dogs.age",
      "dogs.gender",
      "dogs.weight",
      "dogs.dog_id",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*",
      "professionals.street",
      "professionals.city",
      "professionals.state",
      "professionals.role_code",
      "professionals.first_name",
      "professionals.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What is the charge amount of the most expensive charge type? | charges : charges.charge_amount , charges.charge_type , charges.charge_id , charges.* | dogs : dogs.name , dogs.age , dogs.gender , dogs.weight , dogs.dog_id , dogs.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.* | professionals : professionals.street , professionals.city , professionals.state , professionals.role_code , professionals.first_name , professionals.*",
    "output_sequence": "select max ( _ ) from _ | select max ( charges.charge_amount ) from charges",
    "tc_original": [
      "charges.charge_amount",
      "charges.charge_type",
      "charges.charge_id",
      "charges.*",
      "dogs.name",
      "dogs.age",
      "dogs.gender",
      "dogs.weight",
      "dogs.dog_id",
      "dogs.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*",
      "professionals.street",
      "professionals.city",
      "professionals.state",
      "professionals.role_code",
      "professionals.first_name",
      "professionals.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "List the email, cell phone and home phone of all the professionals. | professionals : professionals.home_phone , professionals.email_address , professionals.cell_number , professionals.professional_id , professionals.street , professionals.* | owners : owners.street , owners.city , owners.state , owners.email_address , owners.cell_number , owners.* | dogs : dogs.name , dogs.age , dogs.gender , dogs.weight , dogs.owner_id , dogs.* | treatments : treatments.professional_id , treatments.treatment_id , treatments.dog_id , treatments.treatment_type_code , treatments.date_of_treatment , treatments.*",
    "output_sequence": "select _ from _ | select professionals.email_address , professionals.cell_number , professionals.home_phone from professionals",
    "tc_original": [
      "professionals.home_phone",
      "professionals.email_address",
      "professionals.cell_number",
      "professionals.professional_id",
      "professionals.street",
      "professionals.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.email_address",
      "owners.cell_number",
      "owners.*",
      "dogs.name",
      "dogs.age",
      "dogs.gender",
      "dogs.weight",
      "dogs.owner_id",
      "dogs.*",
      "treatments.professional_id",
      "treatments.treatment_id",
      "treatments.dog_id",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "treatments.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are the email, cell phone and home phone of each professional? | professionals : professionals.home_phone , professionals.email_address , professionals.cell_number , professionals.first_name , professionals.last_name , professionals.* | owners : owners.street , owners.city , owners.state , owners.first_name , owners.email_address , owners.* | dogs : dogs.name , dogs.age , dogs.gender , dogs.weight , dogs.owner_id , dogs.* | treatments : treatments.professional_id , treatments.treatment_id , treatments.dog_id , treatments.treatment_type_code , treatments.date_of_treatment , treatments.*",
    "output_sequence": "select _ from _ | select professionals.email_address , professionals.cell_number , professionals.home_phone from professionals",
    "tc_original": [
      "professionals.home_phone",
      "professionals.email_address",
      "professionals.cell_number",
      "professionals.first_name",
      "professionals.last_name",
      "professionals.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.first_name",
      "owners.email_address",
      "owners.*",
      "dogs.name",
      "dogs.age",
      "dogs.gender",
      "dogs.weight",
      "dogs.owner_id",
      "dogs.*",
      "treatments.professional_id",
      "treatments.treatment_id",
      "treatments.dog_id",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "treatments.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are all the possible breed type and size type combinations? | sizes : sizes.size_description , sizes.size_code , sizes.* | dogs : dogs.breed_code , dogs.size_code , dogs.name , dogs.dog_id , dogs.gender , dogs.* | breeds : breeds.breed_name , breeds.breed_code , breeds.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.*",
    "output_sequence": "select distinct _ from _ | select distinct dogs.breed_code , dogs.size_code from dogs",
    "tc_original": [
      "sizes.size_description",
      "sizes.size_code",
      "sizes.*",
      "dogs.breed_code",
      "dogs.size_code",
      "dogs.name",
      "dogs.dog_id",
      "dogs.gender",
      "dogs.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "breeds.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the distinct breed type and size type combinations for dogs. | dogs : dogs.breed_code , dogs.size_code , dogs.name , dogs.age , dogs.gender , dogs.* | breeds : breeds.breed_name , breeds.breed_code , breeds.* | sizes : sizes.size_description , sizes.size_code , sizes.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.*",
    "output_sequence": "select distinct _ from _ | select distinct dogs.breed_code , dogs.size_code from dogs",
    "tc_original": [
      "dogs.breed_code",
      "dogs.size_code",
      "dogs.name",
      "dogs.age",
      "dogs.gender",
      "dogs.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "breeds.*",
      "sizes.size_description",
      "sizes.size_code",
      "sizes.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "List the first name of all the professionals along with the description of the treatment they have done. | professionals : professionals.first_name , professionals.professional_id , professionals.last_name , professionals.street , professionals.city , professionals.* | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | treatments : treatments.professional_id , treatments.treatment_id , treatments.treatment_type_code , treatments.dog_id , treatments.date_of_treatment , treatments.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.*",
    "output_sequence": "select distinct _ from _ | select distinct professionals.first_name , treatment_types.treatment_type_description from professionals",
    "tc_original": [
      "professionals.first_name",
      "professionals.professional_id",
      "professionals.last_name",
      "professionals.street",
      "professionals.city",
      "professionals.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "treatment_types.*",
      "treatments.professional_id",
      "treatments.treatment_id",
      "treatments.treatment_type_code",
      "treatments.dog_id",
      "treatments.date_of_treatment",
      "treatments.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are each professional's first name and description of the treatment they have performed? | professionals : professionals.first_name , professionals.last_name , professionals.professional_id , professionals.role_code , professionals.street , professionals.* | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | treatments : treatments.professional_id , treatments.treatment_id , treatments.treatment_type_code , treatments.dog_id , treatments.date_of_treatment , treatments.* | owners : owners.street , owners.city , owners.state , owners.owner_id , owners.first_name , owners.*",
    "output_sequence": "select distinct _ from _ | select distinct professionals.first_name , treatment_types.treatment_type_description from professionals",
    "tc_original": [
      "professionals.first_name",
      "professionals.last_name",
      "professionals.professional_id",
      "professionals.role_code",
      "professionals.street",
      "professionals.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "treatment_types.*",
      "treatments.professional_id",
      "treatments.treatment_id",
      "treatments.treatment_type_code",
      "treatments.dog_id",
      "treatments.date_of_treatment",
      "treatments.*",
      "owners.street",
      "owners.city",
      "owners.state",
      "owners.owner_id",
      "owners.first_name",
      "owners.*"
    ]
  }
]