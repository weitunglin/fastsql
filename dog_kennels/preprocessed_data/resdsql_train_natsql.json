[
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which states have both owners and professionals living there? | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | breeds : breeds.breed_name , breeds.breed_code , breeds.* | dogs : dogs.dog_id , dogs.date_departed , dogs.owner_id , dogs.breed_code , dogs.weight , dogs.* | sizes : sizes.size_description , sizes.size_code , sizes.*",
    "output_sequence": "select count ( singer.* ) from singer | select count ( singer.* ) from singer",
    "tc_original": [
      "charges.*",
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "dogs.*",
      "dogs.dog_id",
      "dogs.date_departed",
      "dogs.owner_id",
      "dogs.breed_code",
      "dogs.weight",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the states where both owners and professionals live. | professionals : professionals.professional_id , professionals.first_name , professionals.zip_code , professionals.state , professionals.home_phone , professionals.* | charges : charges.charge_amount , charges.charge_id , charges.charge_type , charges.* | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | owners : owners.state , owners.city , owners.owner_id , owners.cell_number , owners.street , owners.*",
    "output_sequence": "select count ( singer.* ) from singer | select count ( singer.* ) from singer",
    "tc_original": [
      "professionals.*",
      "professionals.professional_id",
      "professionals.first_name",
      "professionals.zip_code",
      "professionals.state",
      "professionals.home_phone",
      "charges.*",
      "charges.charge_amount",
      "charges.charge_id",
      "charges.charge_type",
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "owners.*",
      "owners.state",
      "owners.city",
      "owners.owner_id",
      "owners.cell_number",
      "owners.street"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What is the average age of the dogs who have gone through any treatments? | professionals : professionals.home_phone , professionals.state , professionals.street , professionals.role_code , professionals.professional_id , professionals.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | owners : owners.street , owners.first_name , owners.zip_code , owners.last_name , owners.cell_number , owners.* | sizes : sizes.size_code , sizes.size_description , sizes.*",
    "output_sequence": "select singer.name , singer.country , singer.age from singer order by singer.age desc | select singer.name , singer.country , singer.age from singer order by singer.age desc",
    "tc_original": [
      "professionals.*",
      "professionals.home_phone",
      "professionals.state",
      "professionals.street",
      "professionals.role_code",
      "professionals.professional_id",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "owners.*",
      "owners.street",
      "owners.first_name",
      "owners.zip_code",
      "owners.last_name",
      "owners.cell_number",
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the average age of the dogs who went through treatments. | dogs : dogs.date_arrived , dogs.date_departed , dogs.owner_id , dogs.weight , dogs.abandoned_yn , dogs.* | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | treatments : treatments.professional_id , treatments.date_of_treatment , treatments.dog_id , treatments.cost_of_treatment , treatments.treatment_type_code , treatments.* | sizes : sizes.size_description , sizes.size_code , sizes.*",
    "output_sequence": "select singer.name , singer.country , singer.age from singer order by singer.age desc | select singer.name , singer.country , singer.age from singer order by singer.age desc",
    "tc_original": [
      "dogs.*",
      "dogs.date_arrived",
      "dogs.date_departed",
      "dogs.owner_id",
      "dogs.weight",
      "dogs.abandoned_yn",
      "charges.*",
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "treatments.*",
      "treatments.professional_id",
      "treatments.date_of_treatment",
      "treatments.dog_id",
      "treatments.cost_of_treatment",
      "treatments.treatment_type_code",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone. | breeds : breeds.breed_name , breeds.breed_code , breeds.* | professionals : professionals.home_phone , professionals.state ( Indiana ) , professionals.street , professionals.last_name , professionals.email_address , professionals.* | sizes : sizes.size_code , sizes.size_description , sizes.* | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.*",
    "output_sequence": "select avg ( singer.age ) , min ( singer.age ) , max ( singer.age ) from singer where singer.country = _ | select avg ( singer.age ) , min ( singer.age ) , max ( singer.age ) from singer where singer.country = 'France'",
    "tc_original": [
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "professionals.*",
      "professionals.home_phone",
      "professionals.state",
      "professionals.street",
      "professionals.last_name",
      "professionals.email_address",
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description",
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments. | owners : owners.zip_code , owners.state ( Indiana ) , owners.street , owners.first_name , owners.city , owners.* | dogs : dogs.date_departed , dogs.dog_id , dogs.owner_id , dogs.abandoned_yn , dogs.weight , dogs.* | treatments : treatments.treatment_type_code , treatments.date_of_treatment , treatments.treatment_id , treatments.dog_id , treatments.professional_id , treatments.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.*",
    "output_sequence": "select avg ( singer.age ) , min ( singer.age ) , max ( singer.age ) from singer where singer.country = _ | select avg ( singer.age ) , min ( singer.age ) , max ( singer.age ) from singer where singer.country = 'France'",
    "tc_original": [
      "owners.*",
      "owners.zip_code",
      "owners.state",
      "owners.street",
      "owners.first_name",
      "owners.city",
      "dogs.*",
      "dogs.date_departed",
      "dogs.dog_id",
      "dogs.owner_id",
      "dogs.abandoned_yn",
      "dogs.weight",
      "treatments.*",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "treatments.treatment_id",
      "treatments.dog_id",
      "treatments.professional_id",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names . | breeds : breeds.breed_code , breeds.breed_name , breeds.* | dogs : dogs.name , dogs.owner_id , dogs.size_code , dogs.age , dogs.abandoned_yn , dogs.* | professionals : professionals.city , professionals.email_address , professionals.first_name , professionals.role_code , professionals.zip_code , professionals.* | treatments : treatments.cost_of_treatment , treatments.date_of_treatment , treatments.dog_id , treatments.treatment_id , treatments.treatment_type_code , treatments.*",
    "output_sequence": "select singer.song_name , singer.song_release_year from singer order by singer.age asc limit _ | select singer.song_name , singer.song_release_year from singer order by singer.age asc limit 1",
    "tc_original": [
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "dogs.*",
      "dogs.name",
      "dogs.owner_id",
      "dogs.size_code",
      "dogs.age",
      "dogs.abandoned_yn",
      "professionals.*",
      "professionals.city",
      "professionals.email_address",
      "professionals.first_name",
      "professionals.role_code",
      "professionals.zip_code",
      "treatments.*",
      "treatments.cost_of_treatment",
      "treatments.date_of_treatment",
      "treatments.dog_id",
      "treatments.treatment_id",
      "treatments.treatment_type_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ? | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | breeds : breeds.breed_name , breeds.breed_code , breeds.* | owners : owners.email_address , owners.first_name , owners.last_name , owners.home_phone , owners.state , owners.* | sizes : sizes.size_description , sizes.size_code , sizes.*",
    "output_sequence": "select singer.song_name , singer.song_release_year from singer order by singer.age asc limit _ | select singer.song_name , singer.song_release_year from singer order by singer.age asc limit 1",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "owners.*",
      "owners.email_address",
      "owners.first_name",
      "owners.last_name",
      "owners.home_phone",
      "owners.state",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which first names are used for professionals or owners but are not used as dog names? | professionals : professionals.zip_code , professionals.state , professionals.last_name , professionals.email_address , professionals.professional_id , professionals.* | charges : charges.charge_amount , charges.charge_type , charges.charge_id , charges.* | owners : owners.home_phone , owners.street , owners.cell_number , owners.owner_id , owners.zip_code , owners.* | treatments : treatments.treatment_id , treatments.dog_id , treatments.cost_of_treatment , treatments.treatment_type_code , treatments.date_of_treatment , treatments.*",
    "output_sequence": "select distinct singer.country from singer where singer.age > _ | select distinct singer.country from singer where singer.age > 20",
    "tc_original": [
      "professionals.*",
      "professionals.zip_code",
      "professionals.state",
      "professionals.last_name",
      "professionals.email_address",
      "professionals.professional_id",
      "charges.*",
      "charges.charge_amount",
      "charges.charge_type",
      "charges.charge_id",
      "owners.*",
      "owners.home_phone",
      "owners.street",
      "owners.cell_number",
      "owners.owner_id",
      "owners.zip_code",
      "treatments.*",
      "treatments.treatment_id",
      "treatments.dog_id",
      "treatments.cost_of_treatment",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the first names that are used for professionals or owners but are not used as dog names. | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | sizes : sizes.size_code , sizes.size_description , sizes.* | dogs : dogs.date_of_birth , dogs.age , dogs.breed_code , dogs.owner_id , dogs.weight , dogs.* | treatments : treatments.professional_id , treatments.treatment_type_code , treatments.date_of_treatment , treatments.dog_id , treatments.treatment_id , treatments.*",
    "output_sequence": "select distinct singer.country from singer where singer.age > _ | select distinct singer.country from singer where singer.age > 20",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description",
      "dogs.*",
      "dogs.date_of_birth",
      "dogs.age",
      "dogs.breed_code",
      "dogs.owner_id",
      "dogs.weight",
      "treatments.*",
      "treatments.professional_id",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "treatments.dog_id",
      "treatments.treatment_id"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which professional did not operate any treatment on dogs? List the professional's id, role and email. | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | sizes : sizes.size_description , sizes.size_code , sizes.*",
    "output_sequence": "select singer.country , count ( singer.* ) from singer group by singer.country | select singer.country , count ( singer.* ) from singer group by singer.country",
    "tc_original": [
      "charges.*",
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Give me the id, role and email of the professionals who did not perform any treatment on dogs. | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | owners : owners.email_address , owners.street , owners.zip_code , owners.owner_id , owners.first_name , owners.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | charges : charges.charge_id , charges.charge_amount , charges.charge_type , charges.*",
    "output_sequence": "select singer.country , count ( singer.* ) from singer group by singer.country | select singer.country , count ( singer.* ) from singer group by singer.country",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "owners.*",
      "owners.email_address",
      "owners.street",
      "owners.zip_code",
      "owners.owner_id",
      "owners.first_name",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "charges.*",
      "charges.charge_id",
      "charges.charge_amount",
      "charges.charge_type"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which owner owns the most dogs? List the owner id, first name and last name. | treatments : treatments.treatment_id , treatments.date_of_treatment , treatments.cost_of_treatment , treatments.professional_id , treatments.dog_id , treatments.* | charges : charges.charge_id , charges.charge_type , charges.charge_amount , charges.* | professionals : professionals.email_address , professionals.first_name , professionals.professional_id , professionals.role_code , professionals.zip_code , professionals.* | sizes : sizes.size_description , sizes.size_code , sizes.*",
    "output_sequence": "select singer.song_name from singer where @.@ > avg ( singer.age ) | select singer.song_name from singer where @.@ > avg ( singer.age )",
    "tc_original": [
      "treatments.*",
      "treatments.treatment_id",
      "treatments.date_of_treatment",
      "treatments.cost_of_treatment",
      "treatments.professional_id",
      "treatments.dog_id",
      "charges.*",
      "charges.charge_id",
      "charges.charge_type",
      "charges.charge_amount",
      "professionals.*",
      "professionals.email_address",
      "professionals.first_name",
      "professionals.professional_id",
      "professionals.role_code",
      "professionals.zip_code",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Return the owner id, first name and last name of the owner who has the most dogs. | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | treatments : treatments.treatment_type_code , treatments.date_of_treatment , treatments.professional_id , treatments.dog_id , treatments.treatment_id , treatments.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | owners : owners.zip_code , owners.last_name , owners.city , owners.street , owners.home_phone , owners.*",
    "output_sequence": "select singer.song_name from singer where @.@ > avg ( singer.age ) | select singer.song_name from singer where @.@ > avg ( singer.age )",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "treatments.*",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "treatments.professional_id",
      "treatments.dog_id",
      "treatments.treatment_id",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "owners.*",
      "owners.zip_code",
      "owners.last_name",
      "owners.city",
      "owners.street",
      "owners.home_phone"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which professionals have done at least two treatments? List the professional's id, role, and first name. | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | owners : owners.street , owners.state , owners.city , owners.first_name , owners.cell_number , owners.*",
    "output_sequence": "select stadium.location , stadium.name from stadium where stadium.capacity between _ and _ | select stadium.location , stadium.name from stadium where stadium.capacity between 5000 and 10000",
    "tc_original": [
      "charges.*",
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "owners.*",
      "owners.street",
      "owners.state",
      "owners.city",
      "owners.first_name",
      "owners.cell_number"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are the id, role, and first name of the professionals who have performed two or more treatments? | treatments : treatments.dog_id , treatments.professional_id , treatments.treatment_id , treatments.treatment_type_code , treatments.date_of_treatment , treatments.* | owners : owners.cell_number , owners.street , owners.state , owners.first_name , owners.email_address , owners.* | professionals : professionals.city , professionals.email_address , professionals.last_name , professionals.cell_number , professionals.zip_code , professionals.* | dogs : dogs.date_arrived , dogs.age , dogs.size_code , dogs.dog_id , dogs.weight , dogs.*",
    "output_sequence": "select stadium.location , stadium.name from stadium where stadium.capacity between _ and _ | select stadium.location , stadium.name from stadium where stadium.capacity between 5000 and 10000",
    "tc_original": [
      "treatments.*",
      "treatments.dog_id",
      "treatments.professional_id",
      "treatments.treatment_id",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "owners.*",
      "owners.cell_number",
      "owners.street",
      "owners.state",
      "owners.first_name",
      "owners.email_address",
      "professionals.*",
      "professionals.city",
      "professionals.email_address",
      "professionals.last_name",
      "professionals.cell_number",
      "professionals.zip_code",
      "dogs.*",
      "dogs.date_arrived",
      "dogs.age",
      "dogs.size_code",
      "dogs.dog_id",
      "dogs.weight"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What is the name of the breed with the most dogs? | sizes : sizes.size_code , sizes.size_description , sizes.* | dogs : dogs.owner_id , dogs.date_departed , dogs.abandoned_yn , dogs.gender , dogs.dog_id , dogs.* | treatments : treatments.date_of_treatment , treatments.cost_of_treatment , treatments.dog_id , treatments.treatment_type_code , treatments.treatment_id , treatments.* | charges : charges.charge_amount , charges.charge_id , charges.charge_type , charges.*",
    "output_sequence": "select max ( stadium.capacity ) , stadium.average from stadium | select max ( stadium.capacity ) , stadium.average from stadium",
    "tc_original": [
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description",
      "dogs.*",
      "dogs.owner_id",
      "dogs.date_departed",
      "dogs.abandoned_yn",
      "dogs.gender",
      "dogs.dog_id",
      "treatments.*",
      "treatments.date_of_treatment",
      "treatments.cost_of_treatment",
      "treatments.dog_id",
      "treatments.treatment_type_code",
      "treatments.treatment_id",
      "charges.*",
      "charges.charge_amount",
      "charges.charge_id",
      "charges.charge_type"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which breed do the most dogs have? Give me the breed name. | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | dogs : dogs.date_adopted , dogs.abandoned_yn , dogs.breed_code , dogs.date_departed , dogs.weight , dogs.* | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | breeds : breeds.breed_code , breeds.breed_name , breeds.*",
    "output_sequence": "select avg ( stadium.capacity ) , max ( stadium.capacity ) from stadium | select avg ( stadium.capacity ) , max ( stadium.capacity ) from stadium",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "dogs.*",
      "dogs.date_adopted",
      "dogs.abandoned_yn",
      "dogs.breed_code",
      "dogs.date_departed",
      "dogs.weight",
      "charges.*",
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name. | professionals : professionals.role_code , professionals.zip_code , professionals.professional_id , professionals.last_name , professionals.cell_number , professionals.* | treatments : treatments.treatment_type_code , treatments.professional_id , treatments.date_of_treatment , treatments.treatment_id , treatments.cost_of_treatment , treatments.* | dogs : dogs.breed_code , dogs.age , dogs.name , dogs.size_code , dogs.owner_id , dogs.* | charges : charges.charge_id , charges.charge_amount , charges.charge_type , charges.*",
    "output_sequence": "select stadium.name , stadium.capacity from stadium order by stadium.average desc limit _ | select stadium.name , stadium.capacity from stadium order by stadium.average desc limit 1",
    "tc_original": [
      "professionals.*",
      "professionals.role_code",
      "professionals.zip_code",
      "professionals.professional_id",
      "professionals.last_name",
      "professionals.cell_number",
      "treatments.*",
      "treatments.treatment_type_code",
      "treatments.professional_id",
      "treatments.date_of_treatment",
      "treatments.treatment_id",
      "treatments.cost_of_treatment",
      "dogs.*",
      "dogs.breed_code",
      "dogs.age",
      "dogs.name",
      "dogs.size_code",
      "dogs.owner_id",
      "charges.*",
      "charges.charge_id",
      "charges.charge_amount",
      "charges.charge_type"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs. | professionals : professionals.role_code , professionals.city , professionals.first_name , professionals.home_phone , professionals.professional_id , professionals.* | dogs : dogs.age , dogs.name , dogs.date_adopted , dogs.date_departed , dogs.gender , dogs.* | owners : owners.cell_number , owners.street , owners.city , owners.owner_id , owners.state , owners.* | sizes : sizes.size_description , sizes.size_code , sizes.*",
    "output_sequence": "select stadium.name , stadium.capacity from stadium order by stadium.average desc limit _ | select stadium.name , stadium.capacity from stadium order by stadium.average desc limit 1",
    "tc_original": [
      "professionals.*",
      "professionals.role_code",
      "professionals.city",
      "professionals.first_name",
      "professionals.home_phone",
      "professionals.professional_id",
      "dogs.*",
      "dogs.age",
      "dogs.name",
      "dogs.date_adopted",
      "dogs.date_departed",
      "dogs.gender",
      "owners.*",
      "owners.cell_number",
      "owners.street",
      "owners.city",
      "owners.owner_id",
      "owners.state",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What is the description of the treatment type that costs the least money in total? | charges : charges.charge_amount , charges.charge_type , charges.charge_id , charges.* | dogs : dogs.date_arrived , dogs.age , dogs.name , dogs.date_adopted , dogs.size_code , dogs.* | sizes : sizes.size_description , sizes.size_code , sizes.* | owners : owners.zip_code , owners.last_name , owners.city , owners.street , owners.email_address , owners.*",
    "output_sequence": "select count ( concert.* ) from concert where concert.year = _ or concert.year = _ | select count ( concert.* ) from concert where concert.year = 2014 or concert.year = 2015",
    "tc_original": [
      "charges.*",
      "charges.charge_amount",
      "charges.charge_type",
      "charges.charge_id",
      "dogs.*",
      "dogs.date_arrived",
      "dogs.age",
      "dogs.name",
      "dogs.date_adopted",
      "dogs.size_code",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code",
      "owners.*",
      "owners.zip_code",
      "owners.last_name",
      "owners.city",
      "owners.street",
      "owners.email_address"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Give me the description of the treatment type whose total cost is the lowest. | owners : owners.cell_number , owners.state , owners.email_address , owners.street , owners.zip_code , owners.* | sizes : sizes.size_code , sizes.size_description , sizes.* | charges : charges.charge_type , charges.charge_id , charges.charge_amount , charges.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.*",
    "output_sequence": "select count ( concert.* ) from concert where concert.year = _ or concert.year = _ | select count ( concert.* ) from concert where concert.year = 2014 or concert.year = 2015",
    "tc_original": [
      "owners.*",
      "owners.cell_number",
      "owners.state",
      "owners.email_address",
      "owners.street",
      "owners.zip_code",
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description",
      "charges.*",
      "charges.charge_type",
      "charges.charge_id",
      "charges.charge_amount",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code. | dogs : dogs.breed_code , dogs.abandoned_yn , dogs.dog_id , dogs.date_arrived , dogs.date_departed , dogs.* | breeds : breeds.breed_name , breeds.breed_code , breeds.* | charges : charges.charge_type , charges.charge_id , charges.charge_amount , charges.* | sizes : sizes.size_code , sizes.size_description , sizes.*",
    "output_sequence": "select stadium.name , count ( concert.* ) from concert group by concert.stadium_id | select stadium.name , count ( concert.* ) from concert group by concert.stadium_id",
    "tc_original": [
      "dogs.*",
      "dogs.breed_code",
      "dogs.abandoned_yn",
      "dogs.dog_id",
      "dogs.date_arrived",
      "dogs.date_departed",
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "charges.*",
      "charges.charge_type",
      "charges.charge_id",
      "charges.charge_amount",
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs. | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | dogs : dogs.date_adopted , dogs.gender , dogs.date_of_birth , dogs.dog_id , dogs.date_departed , dogs.* | breeds : breeds.breed_name , breeds.breed_code , breeds.*",
    "output_sequence": "select stadium.name , count ( concert.* ) from concert group by concert.stadium_id | select stadium.name , count ( concert.* ) from concert group by concert.stadium_id",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "charges.*",
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "dogs.*",
      "dogs.date_adopted",
      "dogs.gender",
      "dogs.date_of_birth",
      "dogs.dog_id",
      "dogs.date_departed",
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which professionals have done at least two types of treatments? List the professional id and cell phone. | treatments : treatments.treatment_type_code , treatments.date_of_treatment , treatments.cost_of_treatment , treatments.professional_id , treatments.dog_id , treatments.* | dogs : dogs.date_adopted , dogs.date_of_birth , dogs.date_departed , dogs.size_code , dogs.breed_code , dogs.* | owners : owners.city , owners.home_phone , owners.email_address , owners.state , owners.first_name , owners.* | professionals : professionals.role_code , professionals.city , professionals.street , professionals.home_phone , professionals.first_name , professionals.*",
    "output_sequence": "select stadium.name , stadium.capacity from concert where concert.year >= _ group by stadium.stadium_id order by count ( concert.* ) desc limit _ | select stadium.name , stadium.capacity from concert where concert.year >= 2014 group by stadium.stadium_id order by count ( concert.* ) desc limit 1",
    "tc_original": [
      "treatments.*",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "treatments.cost_of_treatment",
      "treatments.professional_id",
      "treatments.dog_id",
      "dogs.*",
      "dogs.date_adopted",
      "dogs.date_of_birth",
      "dogs.date_departed",
      "dogs.size_code",
      "dogs.breed_code",
      "owners.*",
      "owners.city",
      "owners.home_phone",
      "owners.email_address",
      "owners.state",
      "owners.first_name",
      "professionals.*",
      "professionals.role_code",
      "professionals.city",
      "professionals.street",
      "professionals.home_phone",
      "professionals.first_name"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the id and cell phone of the professionals who operate two or more types of treatments. | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | treatments : treatments.treatment_type_code , treatments.professional_id , treatments.cost_of_treatment , treatments.dog_id , treatments.treatment_id , treatments.* | professionals : professionals.zip_code , professionals.cell_number , professionals.professional_id , professionals.home_phone , professionals.street , professionals.* | dogs : dogs.name , dogs.size_code , dogs.age , dogs.date_arrived , dogs.gender , dogs.*",
    "output_sequence": "select stadium.name , stadium.capacity from concert where concert.year > _ group by stadium.stadium_id order by count ( concert.* ) desc limit _ | select stadium.name , stadium.capacity from concert where concert.year > 2013 group by stadium.stadium_id order by count ( concert.* ) desc limit 1",
    "tc_original": [
      "charges.*",
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "treatments.*",
      "treatments.treatment_type_code",
      "treatments.professional_id",
      "treatments.cost_of_treatment",
      "treatments.dog_id",
      "treatments.treatment_id",
      "professionals.*",
      "professionals.zip_code",
      "professionals.cell_number",
      "professionals.professional_id",
      "professionals.home_phone",
      "professionals.street",
      "dogs.*",
      "dogs.name",
      "dogs.size_code",
      "dogs.age",
      "dogs.date_arrived",
      "dogs.gender"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are the first name and last name of the professionals who have done treatment with cost below average? | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | treatments : treatments.cost_of_treatment , treatments.treatment_type_code , treatments.dog_id , treatments.date_of_treatment , treatments.treatment_id , treatments.* | charges : charges.charge_type , charges.charge_id , charges.charge_amount , charges.* | sizes : sizes.size_description , sizes.size_code , sizes.*",
    "output_sequence": "select concert.year from concert group by concert.year order by count ( concert.* ) desc limit _ | select concert.year from concert group by concert.year order by count ( concert.* ) desc limit 1",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "treatments.*",
      "treatments.cost_of_treatment",
      "treatments.treatment_type_code",
      "treatments.dog_id",
      "treatments.date_of_treatment",
      "treatments.treatment_id",
      "charges.*",
      "charges.charge_type",
      "charges.charge_id",
      "charges.charge_amount",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names. | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | professionals : professionals.zip_code , professionals.city , professionals.cell_number , professionals.home_phone , professionals.email_address , professionals.* | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | treatments : treatments.professional_id , treatments.dog_id , treatments.treatment_id , treatments.cost_of_treatment , treatments.treatment_type_code , treatments.*",
    "output_sequence": "select concert.year from concert group by concert.year order by count ( concert.* ) desc limit _ | select concert.year from concert group by concert.year order by count ( concert.* ) desc limit 1",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "professionals.*",
      "professionals.zip_code",
      "professionals.city",
      "professionals.cell_number",
      "professionals.home_phone",
      "professionals.email_address",
      "charges.*",
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "treatments.*",
      "treatments.professional_id",
      "treatments.dog_id",
      "treatments.treatment_id",
      "treatments.cost_of_treatment",
      "treatments.treatment_type_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "List the date of each treatment, together with the first name of the professional who operated it. | breeds : breeds.breed_name , breeds.breed_code , breeds.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | owners : owners.last_name , owners.first_name , owners.cell_number , owners.email_address , owners.owner_id , owners.* | charges : charges.charge_id , charges.charge_amount , charges.charge_type , charges.*",
    "output_sequence": "select stadium.name from stadium where @.@ not in concert.* | select stadium.name from stadium where @.@ not in concert.*",
    "tc_original": [
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "owners.*",
      "owners.last_name",
      "owners.first_name",
      "owners.cell_number",
      "owners.email_address",
      "owners.owner_id",
      "charges.*",
      "charges.charge_id",
      "charges.charge_amount",
      "charges.charge_type"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are the date and the operating professional's first name of each treatment? | breeds : breeds.breed_name , breeds.breed_code , breeds.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | charges : charges.charge_amount , charges.charge_type , charges.charge_id , charges.* | owners : owners.zip_code , owners.email_address , owners.first_name , owners.street , owners.last_name , owners.*",
    "output_sequence": "select stadium.name from stadium where @.@ not in concert.* | select stadium.name from stadium where @.@ not in concert.*",
    "tc_original": [
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "charges.*",
      "charges.charge_amount",
      "charges.charge_type",
      "charges.charge_id",
      "owners.*",
      "owners.zip_code",
      "owners.email_address",
      "owners.first_name",
      "owners.street",
      "owners.last_name"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "List the cost of each treatment and the corresponding treatment type description. | treatments : treatments.treatment_type_code , treatments.cost_of_treatment , treatments.professional_id , treatments.dog_id , treatments.treatment_id , treatments.* | dogs : dogs.owner_id , dogs.size_code , dogs.date_of_birth , dogs.breed_code , dogs.date_arrived , dogs.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | charges : charges.charge_id , charges.charge_amount , charges.charge_type , charges.*",
    "output_sequence": "select singer.country from singer where singer.age > _ and singer.age < _ | select singer.country from singer where singer.age > 40 and singer.age < 30",
    "tc_original": [
      "treatments.*",
      "treatments.treatment_type_code",
      "treatments.cost_of_treatment",
      "treatments.professional_id",
      "treatments.dog_id",
      "treatments.treatment_id",
      "dogs.*",
      "dogs.owner_id",
      "dogs.size_code",
      "dogs.date_of_birth",
      "dogs.breed_code",
      "dogs.date_arrived",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "charges.*",
      "charges.charge_id",
      "charges.charge_amount",
      "charges.charge_type"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are the cost and treatment type description of each treatment? | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | sizes : sizes.size_description , sizes.size_code , sizes.* | professionals : professionals.zip_code , professionals.last_name , professionals.email_address , professionals.street , professionals.state , professionals.* | dogs : dogs.date_adopted , dogs.date_of_birth , dogs.date_departed , dogs.dog_id , dogs.owner_id , dogs.*",
    "output_sequence": "select stadium.name from stadium where except_ @.@ is stadium.* and concert.year = _ | select stadium.name from stadium where except_ @.@ is stadium.* and concert.year = 2014",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code",
      "professionals.*",
      "professionals.zip_code",
      "professionals.last_name",
      "professionals.email_address",
      "professionals.street",
      "professionals.state",
      "dogs.*",
      "dogs.date_adopted",
      "dogs.date_of_birth",
      "dogs.date_departed",
      "dogs.dog_id",
      "dogs.owner_id"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "List each owner's first name, last name, and the size of his for her dog. | professionals : professionals.state , professionals.last_name , professionals.email_address , professionals.cell_number , professionals.street , professionals.* | dogs : dogs.gender , dogs.name , dogs.date_adopted , dogs.date_of_birth , dogs.size_code , dogs.* | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | sizes : sizes.size_code , sizes.size_description , sizes.*",
    "output_sequence": "select stadium.name from stadium where except_ @.@ is stadium.* and concert.year = _ | select stadium.name from stadium where except_ @.@ is stadium.* and concert.year = 2014",
    "tc_original": [
      "professionals.*",
      "professionals.state",
      "professionals.last_name",
      "professionals.email_address",
      "professionals.cell_number",
      "professionals.street",
      "dogs.*",
      "dogs.gender",
      "dogs.name",
      "dogs.date_adopted",
      "dogs.date_of_birth",
      "dogs.size_code",
      "charges.*",
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are each owner's first name, last name, and the size of their dog? | sizes : sizes.size_code , sizes.size_description , sizes.* | charges : charges.charge_amount , charges.charge_type , charges.charge_id , charges.* | professionals : professionals.first_name , professionals.city , professionals.professional_id , professionals.cell_number , professionals.last_name , professionals.* | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.*",
    "output_sequence": "select concert.concert_name , concert.theme , count ( singer_in_concert.* ) from singer_in_concert group by concert.concert_id | select concert.concert_name , concert.theme , count ( singer_in_concert.* ) from singer_in_concert group by concert.concert_id",
    "tc_original": [
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description",
      "charges.*",
      "charges.charge_amount",
      "charges.charge_type",
      "charges.charge_id",
      "professionals.*",
      "professionals.first_name",
      "professionals.city",
      "professionals.professional_id",
      "professionals.cell_number",
      "professionals.last_name",
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "List pairs of the owner's first name and the dogs's name. | sizes : sizes.size_code , sizes.size_description , sizes.* | dogs : dogs.date_of_birth , dogs.name , dogs.abandoned_yn , dogs.dog_id , dogs.size_code , dogs.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | breeds : breeds.breed_name , breeds.breed_code , breeds.*",
    "output_sequence": "select concert.concert_name , concert.theme , count ( singer_in_concert.* ) from singer_in_concert group by concert.concert_id | select concert.concert_name , concert.theme , count ( singer_in_concert.* ) from singer_in_concert group by concert.concert_id",
    "tc_original": [
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description",
      "dogs.*",
      "dogs.date_of_birth",
      "dogs.name",
      "dogs.abandoned_yn",
      "dogs.dog_id",
      "dogs.size_code",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are each owner's first name and their dogs's name? | owners : owners.first_name , owners.home_phone , owners.zip_code , owners.city , owners.email_address , owners.* | breeds : breeds.breed_name , breeds.breed_code , breeds.* | charges : charges.charge_id , charges.charge_amount , charges.charge_type , charges.* | dogs : dogs.size_code , dogs.weight , dogs.age , dogs.date_departed , dogs.dog_id , dogs.*",
    "output_sequence": "select singer.name , count ( singer_in_concert.* ) from singer_in_concert group by singer.singer_id | select singer.name , count ( singer_in_concert.* ) from singer_in_concert group by singer.singer_id",
    "tc_original": [
      "owners.*",
      "owners.first_name",
      "owners.home_phone",
      "owners.zip_code",
      "owners.city",
      "owners.email_address",
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "charges.*",
      "charges.charge_id",
      "charges.charge_amount",
      "charges.charge_type",
      "dogs.*",
      "dogs.size_code",
      "dogs.weight",
      "dogs.age",
      "dogs.date_departed",
      "dogs.dog_id"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "List the names of the dogs of the rarest breed and the treatment dates of them. | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | professionals : professionals.email_address , professionals.role_code , professionals.first_name , professionals.professional_id , professionals.street , professionals.* | treatments : treatments.date_of_treatment , treatments.treatment_type_code , treatments.professional_id , treatments.treatment_id , treatments.cost_of_treatment , treatments.* | dogs : dogs.size_code , dogs.date_adopted , dogs.date_of_birth , dogs.owner_id , dogs.breed_code , dogs.*",
    "output_sequence": "select singer.name , count ( singer_in_concert.* ) from singer_in_concert group by singer.singer_id | select singer.name , count ( singer_in_concert.* ) from singer_in_concert group by singer.singer_id",
    "tc_original": [
      "charges.*",
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "professionals.*",
      "professionals.email_address",
      "professionals.role_code",
      "professionals.first_name",
      "professionals.professional_id",
      "professionals.street",
      "treatments.*",
      "treatments.date_of_treatment",
      "treatments.treatment_type_code",
      "treatments.professional_id",
      "treatments.treatment_id",
      "treatments.cost_of_treatment",
      "dogs.*",
      "dogs.size_code",
      "dogs.date_adopted",
      "dogs.date_of_birth",
      "dogs.owner_id",
      "dogs.breed_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which dogs are of the rarest breed? Show their names and treatment dates. | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | treatments : treatments.dog_id , treatments.treatment_id , treatments.date_of_treatment , treatments.treatment_type_code , treatments.cost_of_treatment , treatments.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | owners : owners.email_address , owners.city , owners.zip_code , owners.last_name , owners.home_phone , owners.*",
    "output_sequence": "select singer.name from singer where concert.year = _ | select singer.name from singer where concert.year = 2014",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "treatments.*",
      "treatments.dog_id",
      "treatments.treatment_id",
      "treatments.date_of_treatment",
      "treatments.treatment_type_code",
      "treatments.cost_of_treatment",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "owners.*",
      "owners.email_address",
      "owners.city",
      "owners.zip_code",
      "owners.last_name",
      "owners.home_phone"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name. | treatments : treatments.cost_of_treatment , treatments.professional_id , treatments.date_of_treatment , treatments.treatment_id , treatments.treatment_type_code , treatments.* | breeds : breeds.breed_name , breeds.breed_code , breeds.* | owners : owners.city , owners.owner_id , owners.last_name , owners.street , owners.cell_number , owners.* | professionals : professionals.city , professionals.first_name , professionals.zip_code , professionals.last_name , professionals.professional_id , professionals.*",
    "output_sequence": "select singer.name from singer where concert.year = _ | select singer.name from singer where concert.year = 2014",
    "tc_original": [
      "treatments.*",
      "treatments.cost_of_treatment",
      "treatments.professional_id",
      "treatments.date_of_treatment",
      "treatments.treatment_id",
      "treatments.treatment_type_code",
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "owners.*",
      "owners.city",
      "owners.owner_id",
      "owners.last_name",
      "owners.street",
      "owners.cell_number",
      "professionals.*",
      "professionals.city",
      "professionals.first_name",
      "professionals.zip_code",
      "professionals.last_name",
      "professionals.professional_id"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the first names of owners living in Virginia and the names of dogs they own. | professionals : professionals.state , professionals.zip_code , professionals.last_name , professionals.city , professionals.cell_number , professionals.* | sizes : sizes.size_description , sizes.size_code , sizes.* | treatments : treatments.professional_id , treatments.cost_of_treatment , treatments.date_of_treatment , treatments.treatment_id , treatments.dog_id , treatments.* | breeds : breeds.breed_name , breeds.breed_code , breeds.*",
    "output_sequence": "select singer.name , singer.country from singer where singer.song_name like _ | select singer.name , singer.country from singer where singer.song_name like '%Hey%'",
    "tc_original": [
      "professionals.*",
      "professionals.state",
      "professionals.zip_code",
      "professionals.last_name",
      "professionals.city",
      "professionals.cell_number",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code",
      "treatments.*",
      "treatments.professional_id",
      "treatments.cost_of_treatment",
      "treatments.date_of_treatment",
      "treatments.treatment_id",
      "treatments.dog_id",
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are the arriving date and the departing date of the dogs who have gone through a treatment? | treatments : treatments.date_of_treatment , treatments.treatment_type_code , treatments.cost_of_treatment , treatments.treatment_id , treatments.professional_id , treatments.* | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | charges : charges.charge_amount , charges.charge_id , charges.charge_type , charges.*",
    "output_sequence": "select singer.name , singer.country from singer where singer.song_name like _ | select singer.name , singer.country from singer where singer.song_name like '%Hey%'",
    "tc_original": [
      "treatments.*",
      "treatments.date_of_treatment",
      "treatments.treatment_type_code",
      "treatments.cost_of_treatment",
      "treatments.treatment_id",
      "treatments.professional_id",
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "charges.*",
      "charges.charge_amount",
      "charges.charge_id",
      "charges.charge_type"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the arriving date and the departing date of the dogs that received a treatment. | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | dogs : dogs.owner_id , dogs.date_of_birth , dogs.date_departed , dogs.abandoned_yn , dogs.date_adopted , dogs.* | charges : charges.charge_id , charges.charge_amount , charges.charge_type , charges.* | sizes : sizes.size_code , sizes.size_description , sizes.*",
    "output_sequence": "select stadium.name , stadium.location from stadium where concert.year = _ and concert.year = _ | select stadium.name , stadium.location from stadium where concert.year = 2014 and concert.year = 2015",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "dogs.*",
      "dogs.owner_id",
      "dogs.date_of_birth",
      "dogs.date_departed",
      "dogs.abandoned_yn",
      "dogs.date_adopted",
      "charges.*",
      "charges.charge_id",
      "charges.charge_amount",
      "charges.charge_type",
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "List the last name of the owner owning the youngest dog. | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | treatments : treatments.professional_id , treatments.treatment_type_code , treatments.cost_of_treatment , treatments.date_of_treatment , treatments.dog_id , treatments.* | owners : owners.city , owners.cell_number , owners.email_address , owners.zip_code , owners.first_name , owners.* | charges : charges.charge_id , charges.charge_amount , charges.charge_type , charges.*",
    "output_sequence": "select stadium.name , stadium.location from stadium where concert.year = _ and concert.year = _ | select stadium.name , stadium.location from stadium where concert.year = 2014 and concert.year = 2015",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "treatments.*",
      "treatments.professional_id",
      "treatments.treatment_type_code",
      "treatments.cost_of_treatment",
      "treatments.date_of_treatment",
      "treatments.dog_id",
      "owners.*",
      "owners.city",
      "owners.cell_number",
      "owners.email_address",
      "owners.zip_code",
      "owners.first_name",
      "charges.*",
      "charges.charge_id",
      "charges.charge_amount",
      "charges.charge_type"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Who owns the youngest dog? Give me his or her last name. | professionals : professionals.street , professionals.home_phone , professionals.zip_code , professionals.cell_number , professionals.email_address , professionals.* | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.* | sizes : sizes.size_code , sizes.size_description , sizes.* | charges : charges.charge_id , charges.charge_amount , charges.charge_type , charges.*",
    "output_sequence": "select count ( concert.* ) from concert order by stadium.capacity desc limit _ | select count ( concert.* ) from concert order by stadium.capacity desc limit 1",
    "tc_original": [
      "professionals.*",
      "professionals.street",
      "professionals.home_phone",
      "professionals.zip_code",
      "professionals.cell_number",
      "professionals.email_address",
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code",
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description",
      "charges.*",
      "charges.charge_id",
      "charges.charge_amount",
      "charges.charge_type"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin. | sizes : sizes.size_code , sizes.size_description , sizes.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | charges : charges.charge_amount , charges.charge_type , charges.charge_id , charges.*",
    "output_sequence": "select count ( concert.* ) from concert order by stadium.capacity desc limit _ | select count ( concert.* ) from concert order by stadium.capacity desc limit 1",
    "tc_original": [
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "charges.*",
      "charges.charge_amount",
      "charges.charge_type",
      "charges.charge_id"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin? | sizes : sizes.size_code , sizes.size_description , sizes.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | treatments : treatments.cost_of_treatment , treatments.treatment_type_code , treatments.treatment_id , treatments.professional_id , treatments.date_of_treatment , treatments.*",
    "output_sequence": "select count ( pets.* ) from pets where pets.weight > _ | select count ( pets.* ) from pets where pets.weight > 10",
    "tc_original": [
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "treatments.*",
      "treatments.cost_of_treatment",
      "treatments.treatment_type_code",
      "treatments.treatment_id",
      "treatments.professional_id",
      "treatments.date_of_treatment"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "What are the arriving date and the departing date of all the dogs? | owners : owners.first_name , owners.cell_number , owners.email_address , owners.home_phone , owners.state , owners.* | charges : charges.charge_type , charges.charge_amount , charges.charge_id , charges.* | dogs : dogs.dog_id , dogs.size_code , dogs.name , dogs.date_arrived , dogs.age , dogs.* | breeds : breeds.breed_code , breeds.breed_name , breeds.*",
    "output_sequence": "select count ( pets.* ) from pets where pets.weight > _ | select count ( pets.* ) from pets where pets.weight > 10",
    "tc_original": [
      "owners.*",
      "owners.first_name",
      "owners.cell_number",
      "owners.email_address",
      "owners.home_phone",
      "owners.state",
      "charges.*",
      "charges.charge_type",
      "charges.charge_amount",
      "charges.charge_id",
      "dogs.*",
      "dogs.dog_id",
      "dogs.size_code",
      "dogs.name",
      "dogs.date_arrived",
      "dogs.age",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "List the arrival date and the departure date for all the dogs. | sizes : sizes.size_code , sizes.size_description , sizes.* | charges : charges.charge_amount , charges.charge_type , charges.charge_id , charges.* | professionals : professionals.first_name , professionals.street , professionals.last_name , professionals.city , professionals.home_phone , professionals.* | breeds : breeds.breed_name , breeds.breed_code , breeds.*",
    "output_sequence": "select pets.weight from pets order by pets.pet_age asc limit _ | select pets.weight from pets order by pets.pet_age asc limit 1",
    "tc_original": [
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description",
      "charges.*",
      "charges.charge_amount",
      "charges.charge_type",
      "charges.charge_id",
      "professionals.*",
      "professionals.first_name",
      "professionals.street",
      "professionals.last_name",
      "professionals.city",
      "professionals.home_phone",
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "How many dogs went through any treatments? | treatments : treatments.cost_of_treatment , treatments.treatment_type_code , treatments.professional_id , treatments.dog_id , treatments.date_of_treatment , treatments.* | dogs : dogs.age , dogs.date_of_birth , dogs.owner_id , dogs.breed_code , dogs.date_departed , dogs.* | sizes : sizes.size_code , sizes.size_description , sizes.* | owners : owners.city , owners.owner_id , owners.zip_code , owners.last_name , owners.home_phone , owners.*",
    "output_sequence": "select pets.weight from pets order by pets.pet_age asc limit _ | select pets.weight from pets order by pets.pet_age asc limit 1",
    "tc_original": [
      "treatments.*",
      "treatments.cost_of_treatment",
      "treatments.treatment_type_code",
      "treatments.professional_id",
      "treatments.dog_id",
      "treatments.date_of_treatment",
      "dogs.*",
      "dogs.age",
      "dogs.date_of_birth",
      "dogs.owner_id",
      "dogs.breed_code",
      "dogs.date_departed",
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description",
      "owners.*",
      "owners.city",
      "owners.owner_id",
      "owners.zip_code",
      "owners.last_name",
      "owners.home_phone"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Count the number of dogs that went through a treatment. | breeds : breeds.breed_code , breeds.breed_name , breeds.* | owners : owners.street , owners.state , owners.cell_number , owners.home_phone , owners.first_name , owners.* | dogs : dogs.date_arrived , dogs.date_adopted , dogs.date_departed , dogs.abandoned_yn , dogs.owner_id , dogs.* | treatment_types : treatment_types.treatment_type_description , treatment_types.treatment_type_code , treatment_types.*",
    "output_sequence": "select max ( pets.weight ) , pets.pettype from pets group by pets.pettype | select max ( pets.weight ) , pets.pettype from pets group by pets.pettype",
    "tc_original": [
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "owners.*",
      "owners.street",
      "owners.state",
      "owners.cell_number",
      "owners.home_phone",
      "owners.first_name",
      "dogs.*",
      "dogs.date_arrived",
      "dogs.date_adopted",
      "dogs.date_departed",
      "dogs.abandoned_yn",
      "dogs.owner_id",
      "treatment_types.*",
      "treatment_types.treatment_type_description",
      "treatment_types.treatment_type_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "How many professionals have performed any treatment to dogs? | treatments : treatments.treatment_id , treatments.professional_id , treatments.date_of_treatment , treatments.treatment_type_code , treatments.dog_id , treatments.* | breeds : breeds.breed_name , breeds.breed_code , breeds.* | owners : owners.state , owners.home_phone , owners.city , owners.zip_code , owners.first_name , owners.* | sizes : sizes.size_code , sizes.size_description , sizes.*",
    "output_sequence": "select max ( pets.weight ) , pets.pettype from pets group by pets.pettype | select max ( pets.weight ) , pets.pettype from pets group by pets.pettype",
    "tc_original": [
      "treatments.*",
      "treatments.treatment_id",
      "treatments.professional_id",
      "treatments.date_of_treatment",
      "treatments.treatment_type_code",
      "treatments.dog_id",
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "owners.*",
      "owners.state",
      "owners.home_phone",
      "owners.city",
      "owners.zip_code",
      "owners.first_name",
      "sizes.*",
      "sizes.size_code",
      "sizes.size_description"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the number of professionals who have ever treated dogs. | owners : owners.first_name , owners.last_name , owners.street , owners.zip_code , owners.state , owners.* | dogs : dogs.age , dogs.gender , dogs.name , dogs.owner_id , dogs.date_departed , dogs.* | sizes : sizes.size_description , sizes.size_code , sizes.* | breeds : breeds.breed_code , breeds.breed_name , breeds.*",
    "output_sequence": "select count ( has_pet.* ) from has_pet where student.age > _ | select count ( has_pet.* ) from has_pet where student.age > 20",
    "tc_original": [
      "owners.*",
      "owners.first_name",
      "owners.last_name",
      "owners.street",
      "owners.zip_code",
      "owners.state",
      "dogs.*",
      "dogs.age",
      "dogs.gender",
      "dogs.name",
      "dogs.owner_id",
      "dogs.date_departed",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state. | dogs : dogs.weight , dogs.gender , dogs.name , dogs.date_departed , dogs.breed_code , dogs.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | treatments : treatments.professional_id , treatments.treatment_type_code , treatments.treatment_id , treatments.date_of_treatment , treatments.cost_of_treatment , treatments.* | charges : charges.charge_id , charges.charge_amount , charges.charge_type , charges.*",
    "output_sequence": "select count ( has_pet.* ) from has_pet where student.age > _ | select count ( has_pet.* ) from has_pet where student.age > 20",
    "tc_original": [
      "dogs.*",
      "dogs.weight",
      "dogs.gender",
      "dogs.name",
      "dogs.date_departed",
      "dogs.breed_code",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "treatments.*",
      "treatments.professional_id",
      "treatments.treatment_type_code",
      "treatments.treatment_id",
      "treatments.date_of_treatment",
      "treatments.cost_of_treatment",
      "charges.*",
      "charges.charge_id",
      "charges.charge_amount",
      "charges.charge_type"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'. | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | owners : owners.last_name , owners.zip_code , owners.first_name , owners.home_phone , owners.street , owners.* | charges : charges.charge_amount , charges.charge_id , charges.charge_type , charges.* | treatments : treatments.dog_id , treatments.treatment_type_code , treatments.date_of_treatment , treatments.treatment_id , treatments.cost_of_treatment , treatments.*",
    "output_sequence": "select count ( pets.* ) from pets where student.sex = _ and pets.pettype = _ | select count ( pets.* ) from pets where student.sex = 'F' and pets.pettype = 'dog'",
    "tc_original": [
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "owners.*",
      "owners.last_name",
      "owners.zip_code",
      "owners.first_name",
      "owners.home_phone",
      "owners.street",
      "charges.*",
      "charges.charge_amount",
      "charges.charge_id",
      "charges.charge_type",
      "treatments.*",
      "treatments.dog_id",
      "treatments.treatment_type_code",
      "treatments.date_of_treatment",
      "treatments.treatment_id",
      "treatments.cost_of_treatment"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email. | owners : owners.email_address , owners.first_name , owners.street , owners.state , owners.zip_code , owners.* | sizes : sizes.size_description , sizes.size_code , sizes.* | dogs : dogs.name , dogs.breed_code , dogs.abandoned_yn , dogs.weight , dogs.date_adopted , dogs.* | treatments : treatments.date_of_treatment , treatments.dog_id , treatments.cost_of_treatment , treatments.treatment_id , treatments.treatment_type_code , treatments.*",
    "output_sequence": "select count ( pets.* ) from pets where student.sex = _ and pets.pettype = _ | select count ( pets.* ) from pets where student.sex = 'F' and pets.pettype = 'dog'",
    "tc_original": [
      "owners.*",
      "owners.email_address",
      "owners.first_name",
      "owners.street",
      "owners.state",
      "owners.zip_code",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code",
      "dogs.*",
      "dogs.name",
      "dogs.breed_code",
      "dogs.abandoned_yn",
      "dogs.weight",
      "dogs.date_adopted",
      "treatments.*",
      "treatments.date_of_treatment",
      "treatments.dog_id",
      "treatments.cost_of_treatment",
      "treatments.treatment_id",
      "treatments.treatment_type_code"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'. | breeds : breeds.breed_name , breeds.breed_code , breeds.* | sizes : sizes.size_description , sizes.size_code , sizes.* | charges : charges.charge_amount , charges.charge_id , charges.charge_type , charges.* | dogs : dogs.dog_id , dogs.abandoned_yn , dogs.size_code , dogs.date_departed , dogs.date_adopted , dogs.*",
    "output_sequence": "select count ( distinct pets.pettype ) from pets | select count ( distinct pets.pettype ) from pets",
    "tc_original": [
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "sizes.*",
      "sizes.size_description",
      "sizes.size_code",
      "charges.*",
      "charges.charge_amount",
      "charges.charge_id",
      "charges.charge_type",
      "dogs.*",
      "dogs.dog_id",
      "dogs.abandoned_yn",
      "dogs.size_code",
      "dogs.date_departed",
      "dogs.date_adopted"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "How many dogs have an age below the average? | charges : charges.charge_amount , charges.charge_id , charges.charge_type , charges.* | dogs : dogs.breed_code , dogs.weight , dogs.dog_id , dogs.gender , dogs.size_code , dogs.* | breeds : breeds.breed_name , breeds.breed_code , breeds.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.*",
    "output_sequence": "select count ( distinct pets.pettype ) from pets | select count ( distinct pets.pettype ) from pets",
    "tc_original": [
      "charges.*",
      "charges.charge_amount",
      "charges.charge_id",
      "charges.charge_type",
      "dogs.*",
      "dogs.breed_code",
      "dogs.weight",
      "dogs.dog_id",
      "dogs.gender",
      "dogs.size_code",
      "breeds.*",
      "breeds.breed_name",
      "breeds.breed_code",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Count the number of dogs of an age below the average. | professionals : professionals.last_name , professionals.role_code , professionals.home_phone , professionals.state , professionals.city , professionals.* | dogs : dogs.abandoned_yn , dogs.size_code , dogs.weight , dogs.date_arrived , dogs.gender , dogs.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.*",
    "output_sequence": "select distinct student.fname from student where pets.pettype = _ or pets.pettype = _ | select distinct student.fname from student where pets.pettype = 'cat' or pets.pettype = 'dog'",
    "tc_original": [
      "professionals.*",
      "professionals.last_name",
      "professionals.role_code",
      "professionals.home_phone",
      "professionals.state",
      "professionals.city",
      "dogs.*",
      "dogs.abandoned_yn",
      "dogs.size_code",
      "dogs.weight",
      "dogs.date_arrived",
      "dogs.gender",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "How much does the most recent treatment cost? | professionals : professionals.cell_number , professionals.email_address , professionals.street , professionals.zip_code , professionals.home_phone , professionals.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | dogs : dogs.date_of_birth , dogs.age , dogs.date_adopted , dogs.owner_id , dogs.name , dogs.* | treatments : treatments.cost_of_treatment , treatments.professional_id , treatments.date_of_treatment , treatments.treatment_id , treatments.dog_id , treatments.*",
    "output_sequence": "select distinct student.fname from student where pets.pettype = _ or pets.pettype = _ | select distinct student.fname from student where pets.pettype = 'cat' or pets.pettype = 'dog'",
    "tc_original": [
      "professionals.*",
      "professionals.cell_number",
      "professionals.email_address",
      "professionals.street",
      "professionals.zip_code",
      "professionals.home_phone",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "dogs.*",
      "dogs.date_of_birth",
      "dogs.age",
      "dogs.date_adopted",
      "dogs.owner_id",
      "dogs.name",
      "treatments.*",
      "treatments.cost_of_treatment",
      "treatments.professional_id",
      "treatments.date_of_treatment",
      "treatments.treatment_id",
      "treatments.dog_id"
    ]
  },
  {
    "db_id": "dog_kennels",
    "input_sequence": "Show me the cost of the most recently performed treatment. | charges : charges.charge_amount , charges.charge_id , charges.charge_type , charges.* | breeds : breeds.breed_code , breeds.breed_name , breeds.* | treatment_types : treatment_types.treatment_type_code , treatment_types.treatment_type_description , treatment_types.* | professionals : professionals.cell_number , professionals.zip_code , professionals.professional_id , professionals.city , professionals.last_name , professionals.*",
    "output_sequence": "select student.fname from student where pets.pettype = _ and pets.pettype = _ | select student.fname from student where pets.pettype = 'cat' and pets.pettype = 'dog'",
    "tc_original": [
      "charges.*",
      "charges.charge_amount",
      "charges.charge_id",
      "charges.charge_type",
      "breeds.*",
      "breeds.breed_code",
      "breeds.breed_name",
      "treatment_types.*",
      "treatment_types.treatment_type_code",
      "treatment_types.treatment_type_description",
      "professionals.*",
      "professionals.cell_number",
      "professionals.zip_code",
      "professionals.professional_id",
      "professionals.city",
      "professionals.last_name"
    ]
  }
]