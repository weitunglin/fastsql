[
  {
    "db_id": "car_1",
    "input_sequence": "How many continents are there? | continents : continents.contid , continents.continent , continents.* | countries : countries.countryname , countries.countryid , countries.continent , countries.* | cars_data : cars_data.id , cars_data.year , cars_data.accelerate , cars_data.mpg , cars_data.horsepower , cars_data.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select count ( _ ) from _ | select count ( continents.* ) from continents",
    "tc_original": [
      "continents.*",
      "continents.contid",
      "continents.continent",
      "countries.*",
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "cars_data.*",
      "cars_data.id",
      "cars_data.year",
      "cars_data.accelerate",
      "cars_data.mpg",
      "cars_data.horsepower",
      "model_list.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the number of continents? | continents : continents.contid , continents.continent , continents.* | cars_data : cars_data.id , cars_data.accelerate , cars_data.mpg , cars_data.edispl , cars_data.cylinders , cars_data.* | car_names : car_names.make , car_names.model , car_names.makeid , car_names.* | countries : countries.continent , countries.countryid , countries.countryname , countries.*",
    "output_sequence": "select count ( _ ) from _ | select count ( continents.* ) from continents",
    "tc_original": [
      "continents.*",
      "continents.contid",
      "continents.continent",
      "cars_data.*",
      "cars_data.id",
      "cars_data.accelerate",
      "cars_data.mpg",
      "cars_data.edispl",
      "cars_data.cylinders",
      "car_names.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "countries.*",
      "countries.continent",
      "countries.countryid",
      "countries.countryname"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many countries does each continent have? List the continent id, continent name and the number of countries. | continents : continents.contid , continents.continent , continents.* | countries : countries.countryname , countries.countryid , countries.continent , countries.* | car_names : car_names.make , car_names.makeid , car_names.model , car_names.* | cars_data : cars_data.weight , cars_data.horsepower , cars_data.mpg , cars_data.id , cars_data.accelerate , cars_data.*",
    "output_sequence": "select _ , count ( _ ) from _ group by _ | select continents.contid , continents.continent , count ( countries.* ) from countries group by continents.contid",
    "tc_original": [
      "continents.*",
      "continents.contid",
      "continents.continent",
      "countries.*",
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "car_names.*",
      "car_names.make",
      "car_names.makeid",
      "car_names.model",
      "cars_data.*",
      "cars_data.weight",
      "cars_data.horsepower",
      "cars_data.mpg",
      "cars_data.id",
      "cars_data.accelerate"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "For each continent, list its id, name, and how many countries it has? | continents : continents.contid , continents.continent , continents.* | countries : countries.countryid , countries.continent , countries.countryname , countries.* | car_names : car_names.make , car_names.makeid , car_names.model , car_names.* | car_makers : car_makers.id , car_makers.country , car_makers.fullname , car_makers.maker , car_makers.*",
    "output_sequence": "select _ , count ( _ ) from _ group by _ | select continents.contid , continents.continent , count ( countries.* ) from countries group by continents.contid",
    "tc_original": [
      "continents.*",
      "continents.contid",
      "continents.continent",
      "countries.*",
      "countries.countryid",
      "countries.continent",
      "countries.countryname",
      "car_names.*",
      "car_names.make",
      "car_names.makeid",
      "car_names.model",
      "car_makers.*",
      "car_makers.id",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.maker"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many countries are listed? | countries : countries.continent , countries.countryname , countries.countryid , countries.* | continents : continents.continent , continents.contid , continents.* | car_makers : car_makers.maker , car_makers.fullname , car_makers.country , car_makers.id , car_makers.* | model_list : model_list.modelid , model_list.model , model_list.maker , model_list.*",
    "output_sequence": "select count ( _ ) from _ | select count ( countries.* ) from countries",
    "tc_original": [
      "countries.*",
      "countries.continent",
      "countries.countryname",
      "countries.countryid",
      "continents.*",
      "continents.continent",
      "continents.contid",
      "car_makers.*",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.country",
      "car_makers.id",
      "model_list.*",
      "model_list.modelid",
      "model_list.model",
      "model_list.maker"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many countries exist? | countries : countries.continent , countries.countryname , countries.countryid , countries.* | cars_data : cars_data.horsepower , cars_data.weight , cars_data.year , cars_data.edispl , cars_data.accelerate , cars_data.* | model_list : model_list.model , model_list.maker , model_list.modelid , model_list.* | continents : continents.continent , continents.contid , continents.*",
    "output_sequence": "select count ( _ ) from _ | select count ( countries.* ) from countries",
    "tc_original": [
      "countries.*",
      "countries.continent",
      "countries.countryname",
      "countries.countryid",
      "cars_data.*",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.year",
      "cars_data.edispl",
      "cars_data.accelerate",
      "model_list.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "continents.*",
      "continents.continent",
      "continents.contid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many models does each car maker produce? List maker full name, id and the number. | model_list : model_list.modelid , model_list.model , model_list.maker , model_list.* | car_makers : car_makers.id , car_makers.fullname , car_makers.maker , car_makers.country , car_makers.* | countries : countries.countryname , countries.countryid , countries.continent , countries.* | car_names : car_names.make , car_names.model , car_names.makeid , car_names.*",
    "output_sequence": "select _ , count ( _ ) from _ group by _ | select car_makers.fullname , car_makers.id , count ( model_list.* ) from car_makers group by car_makers.id",
    "tc_original": [
      "model_list.*",
      "model_list.modelid",
      "model_list.model",
      "model_list.maker",
      "car_makers.*",
      "car_makers.id",
      "car_makers.fullname",
      "car_makers.maker",
      "car_makers.country",
      "countries.*",
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "car_names.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the full name of each car maker, along with its id and how many models it produces? | car_makers : car_makers.id , car_makers.fullname , car_makers.country , car_makers.maker , car_makers.* | model_list : model_list.modelid , model_list.maker , model_list.model , model_list.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | continents : continents.contid , continents.continent , continents.*",
    "output_sequence": "select _ , count ( _ ) from _ group by _ | select car_makers.fullname , car_makers.id , count ( model_list.* ) from car_makers group by car_makers.id",
    "tc_original": [
      "car_makers.*",
      "car_makers.id",
      "car_makers.fullname",
      "car_makers.country",
      "car_makers.maker",
      "model_list.*",
      "model_list.modelid",
      "model_list.maker",
      "model_list.model",
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "continents.*",
      "continents.contid",
      "continents.continent"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Which model of the car has the minimum horsepower? | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | cars_data : cars_data.horsepower , cars_data.year , cars_data.weight , cars_data.id , cars_data.cylinders , cars_data.* | countries : countries.continent , countries.countryname , countries.countryid , countries.* | continents : continents.contid , continents.continent , continents.*",
    "output_sequence": "select _ from _ order by _ asc limit _ | select car_names.model from car_names order by cars_data.horsepower asc limit 1",
    "tc_original": [
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "cars_data.*",
      "cars_data.horsepower",
      "cars_data.year",
      "cars_data.weight",
      "cars_data.id",
      "cars_data.cylinders",
      "countries.*",
      "countries.continent",
      "countries.countryname",
      "countries.countryid",
      "continents.*",
      "continents.contid",
      "continents.continent"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the model of the car with the smallest amount of horsepower? | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | cars_data : cars_data.horsepower , cars_data.id , cars_data.mpg , cars_data.year , cars_data.weight , cars_data.* | countries : countries.countryname , countries.continent , countries.countryid , countries.* | car_makers : car_makers.id , car_makers.maker , car_makers.fullname , car_makers.country , car_makers.*",
    "output_sequence": "select _ from _ order by _ asc limit _ | select car_names.model from car_names order by cars_data.horsepower asc limit 1",
    "tc_original": [
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "cars_data.*",
      "cars_data.horsepower",
      "cars_data.id",
      "cars_data.mpg",
      "cars_data.year",
      "cars_data.weight",
      "countries.*",
      "countries.countryname",
      "countries.continent",
      "countries.countryid",
      "car_makers.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.country"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Find the model of the car whose weight is below the average weight. | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | cars_data : cars_data.mpg , cars_data.year , cars_data.accelerate , cars_data.horsepower , cars_data.weight , cars_data.* | model_list : model_list.model , model_list.modelid , model_list.maker , model_list.* | continents : continents.contid , continents.continent , continents.*",
    "output_sequence": "select _ from _ where @.@ < avg ( _ ) | select car_names.model from car_names where @.@ < avg ( cars_data.weight )",
    "tc_original": [
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "cars_data.*",
      "cars_data.mpg",
      "cars_data.year",
      "cars_data.accelerate",
      "cars_data.horsepower",
      "cars_data.weight",
      "model_list.*",
      "model_list.model",
      "model_list.modelid",
      "model_list.maker",
      "continents.*",
      "continents.contid",
      "continents.continent"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the model for the car with a weight smaller than the average? | countries : countries.continent , countries.countryid , countries.countryname , countries.* | cars_data : cars_data.weight , cars_data.accelerate , cars_data.edispl , cars_data.cylinders , cars_data.year , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | car_makers : car_makers.fullname , car_makers.maker , car_makers.country , car_makers.id , car_makers.*",
    "output_sequence": "select _ from _ where @.@ < avg ( _ ) | select car_names.model from car_names where @.@ < avg ( cars_data.weight )",
    "tc_original": [
      "countries.*",
      "countries.continent",
      "countries.countryid",
      "countries.countryname",
      "cars_data.*",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.edispl",
      "cars_data.cylinders",
      "cars_data.year",
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_makers.*",
      "car_makers.fullname",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.id"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Find the name of the makers that produced some cars in the year of 1970? | continents : continents.continent , continents.contid , continents.* | cars_data : cars_data.mpg , cars_data.id , cars_data.edispl , cars_data.year , cars_data.weight , cars_data.* | car_makers : car_makers.maker , car_makers.country , car_makers.fullname , car_makers.id , car_makers.* | car_names : car_names.make , car_names.model , car_names.makeid , car_names.*",
    "output_sequence": "select distinct _ from _ where _ | select distinct car_makers.maker from car_makers where cars_data.year = '1970'",
    "tc_original": [
      "continents.*",
      "continents.continent",
      "continents.contid",
      "cars_data.*",
      "cars_data.mpg",
      "cars_data.id",
      "cars_data.edispl",
      "cars_data.year",
      "cars_data.weight",
      "car_makers.*",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.id",
      "car_names.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the name of the different car makers who produced a car in 1970? | car_makers : car_makers.maker , car_makers.id , car_makers.country , car_makers.fullname , car_makers.* | countries : countries.countryid , countries.countryname , countries.continent , countries.* | cars_data : cars_data.year , cars_data.cylinders , cars_data.mpg , cars_data.id , cars_data.horsepower , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select distinct _ from _ where _ | select distinct car_makers.maker from car_makers where cars_data.year = '1970'",
    "tc_original": [
      "car_makers.*",
      "car_makers.maker",
      "car_makers.id",
      "car_makers.country",
      "car_makers.fullname",
      "countries.*",
      "countries.countryid",
      "countries.countryname",
      "countries.continent",
      "cars_data.*",
      "cars_data.year",
      "cars_data.cylinders",
      "cars_data.mpg",
      "cars_data.id",
      "cars_data.horsepower",
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Find the make and production time of the cars that were produced in the earliest year? | car_names : car_names.make , car_names.model , car_names.makeid , car_names.* | cars_data : cars_data.year , cars_data.id , cars_data.horsepower , cars_data.accelerate , cars_data.mpg , cars_data.* | countries : countries.countryname , countries.countryid , countries.continent , countries.* | continents : continents.continent , continents.contid , continents.*",
    "output_sequence": "select _ from _ where @.@ = min ( _ ) | select car_names.make , cars_data.year from cars_data where @.@ = min ( cars_data.year )",
    "tc_original": [
      "car_names.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "cars_data.*",
      "cars_data.year",
      "cars_data.id",
      "cars_data.horsepower",
      "cars_data.accelerate",
      "cars_data.mpg",
      "countries.*",
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "continents.*",
      "continents.continent",
      "continents.contid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the maker of the carr produced in the earliest year and what year was it? | car_names : car_names.make , car_names.makeid , car_names.model , car_names.* | cars_data : cars_data.year , cars_data.mpg , cars_data.weight , cars_data.cylinders , cars_data.accelerate , cars_data.* | model_list : model_list.model , model_list.maker , model_list.modelid , model_list.* | car_makers : car_makers.fullname , car_makers.maker , car_makers.country , car_makers.id , car_makers.*",
    "output_sequence": "select _ from _ where @.@ = min ( _ ) | select car_names.make , cars_data.year from cars_data where @.@ = min ( cars_data.year )",
    "tc_original": [
      "car_names.*",
      "car_names.make",
      "car_names.makeid",
      "car_names.model",
      "cars_data.*",
      "cars_data.year",
      "cars_data.mpg",
      "cars_data.weight",
      "cars_data.cylinders",
      "cars_data.accelerate",
      "model_list.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "car_makers.*",
      "car_makers.fullname",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.id"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Which distinct car models are the produced after 1980? | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.* | cars_data : cars_data.year , cars_data.mpg , cars_data.cylinders , cars_data.weight , cars_data.accelerate , cars_data.* | continents : continents.contid , continents.continent , continents.* | car_names : car_names.model , car_names.makeid , car_names.make , car_names.*",
    "output_sequence": "select distinct _ from _ where _ | select distinct model_list.model from model_list where cars_data.year > 1980",
    "tc_original": [
      "model_list.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "cars_data.*",
      "cars_data.year",
      "cars_data.mpg",
      "cars_data.cylinders",
      "cars_data.weight",
      "cars_data.accelerate",
      "continents.*",
      "continents.contid",
      "continents.continent",
      "car_names.*",
      "car_names.model",
      "car_names.makeid",
      "car_names.make"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the different models for the cards produced after 1980? | car_makers : car_makers.maker , car_makers.country , car_makers.fullname , car_makers.id , car_makers.* | model_list : model_list.model , model_list.maker , model_list.modelid , model_list.* | car_names : car_names.make , car_names.model , car_names.makeid , car_names.* | cars_data : cars_data.year , cars_data.cylinders , cars_data.id , cars_data.weight , cars_data.edispl , cars_data.*",
    "output_sequence": "select distinct _ from _ where _ | select distinct model_list.model from model_list where cars_data.year > 1980",
    "tc_original": [
      "car_makers.*",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.id",
      "model_list.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "car_names.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "cars_data.*",
      "cars_data.year",
      "cars_data.cylinders",
      "cars_data.id",
      "cars_data.weight",
      "cars_data.edispl"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many car makers are there in each continents? List the continent name and the count. | continents : continents.continent , continents.contid , continents.* | car_makers : car_makers.id , car_makers.country , car_makers.fullname , car_makers.maker , car_makers.* | countries : countries.continent , countries.countryid , countries.countryname , countries.* | cars_data : cars_data.cylinders , cars_data.horsepower , cars_data.id , cars_data.year , cars_data.mpg , cars_data.*",
    "output_sequence": "select _ , count ( _ ) from _ group by _ | select continents.continent , count ( car_makers.* ) from car_makers group by continents.continent",
    "tc_original": [
      "continents.*",
      "continents.continent",
      "continents.contid",
      "car_makers.*",
      "car_makers.id",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.maker",
      "countries.*",
      "countries.continent",
      "countries.countryid",
      "countries.countryname",
      "cars_data.*",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.id",
      "cars_data.year",
      "cars_data.mpg"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the name of each continent and how many car makers are there in each one? | continents : continents.continent , continents.contid , continents.* | car_makers : car_makers.fullname , car_makers.country , car_makers.maker , car_makers.id , car_makers.* | countries : countries.countryname , countries.countryid , countries.continent , countries.* | model_list : model_list.modelid , model_list.maker , model_list.model , model_list.*",
    "output_sequence": "select _ , count ( _ ) from _ group by _ | select continents.continent , count ( car_makers.* ) from car_makers group by continents.continent",
    "tc_original": [
      "continents.*",
      "continents.continent",
      "continents.contid",
      "car_makers.*",
      "car_makers.fullname",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.id",
      "countries.*",
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "model_list.*",
      "model_list.modelid",
      "model_list.maker",
      "model_list.model"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Which of the countries has the most car makers? List the country name. | countries : countries.countryname , countries.continent , countries.countryid , countries.* | car_makers : car_makers.country , car_makers.maker , car_makers.fullname , car_makers.id , car_makers.* | model_list : model_list.modelid , model_list.model , model_list.maker , model_list.* | continents : continents.continent , continents.contid , continents.*",
    "output_sequence": "select _ from _ group by _ order by count ( _ ) desc limit _ | select countries.countryname from car_makers group by car_makers.country order by count ( car_makers.* ) desc limit 1",
    "tc_original": [
      "countries.*",
      "countries.countryname",
      "countries.continent",
      "countries.countryid",
      "car_makers.*",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.id",
      "model_list.*",
      "model_list.modelid",
      "model_list.model",
      "model_list.maker",
      "continents.*",
      "continents.continent",
      "continents.contid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the name of the country with the most car makers? | countries : countries.countryname , countries.countryid , countries.continent , countries.* | car_makers : car_makers.country , car_makers.id , car_makers.fullname , car_makers.maker , car_makers.* | continents : continents.continent , continents.contid , continents.* | model_list : model_list.maker , model_list.modelid , model_list.model , model_list.*",
    "output_sequence": "select _ from _ group by _ order by count ( _ ) desc limit _ | select countries.countryname from car_makers group by car_makers.country order by count ( car_makers.* ) desc limit 1",
    "tc_original": [
      "countries.*",
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "car_makers.*",
      "car_makers.country",
      "car_makers.id",
      "car_makers.fullname",
      "car_makers.maker",
      "continents.*",
      "continents.continent",
      "continents.contid",
      "model_list.*",
      "model_list.maker",
      "model_list.modelid",
      "model_list.model"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many car models are produced by each maker ? Only list the count and the maker full name . | car_makers : car_makers.id , car_makers.fullname , car_makers.maker , car_makers.country , car_makers.* | model_list : model_list.modelid , model_list.maker , model_list.model , model_list.* | car_names : car_names.makeid , car_names.model , car_names.make , car_names.* | continents : continents.continent , continents.contid , continents.*",
    "output_sequence": "select count ( _ ) , _ from _ group by _ | select count ( model_list.* ) , car_makers.fullname from model_list group by car_makers.id",
    "tc_original": [
      "car_makers.*",
      "car_makers.id",
      "car_makers.fullname",
      "car_makers.maker",
      "car_makers.country",
      "model_list.*",
      "model_list.modelid",
      "model_list.maker",
      "model_list.model",
      "car_names.*",
      "car_names.makeid",
      "car_names.model",
      "car_names.make",
      "continents.*",
      "continents.continent",
      "continents.contid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the number of car models that are produced by each maker and what is the id and full name of each maker? | car_makers : car_makers.id , car_makers.maker , car_makers.fullname , car_makers.country , car_makers.* | model_list : model_list.model , model_list.modelid , model_list.maker , model_list.* | car_names : car_names.model , car_names.makeid , car_names.make , car_names.* | continents : continents.contid , continents.continent , continents.*",
    "output_sequence": "select count ( _ ) , _ from _ group by _ | select count ( model_list.* ) , car_makers.fullname , car_makers.id from model_list group by car_makers.id",
    "tc_original": [
      "car_makers.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.country",
      "model_list.*",
      "model_list.model",
      "model_list.modelid",
      "model_list.maker",
      "car_names.*",
      "car_names.model",
      "car_names.makeid",
      "car_names.make",
      "continents.*",
      "continents.contid",
      "continents.continent"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the accelerate of the car make amc hornet sportabout (sw)? | car_names : car_names.make ( amc hornet , amc hornet sportabout (sw) ) , car_names.makeid , car_names.model ( amc ) , car_names.* | cars_data : cars_data.accelerate , cars_data.weight , cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.* | countries : countries.countryid , countries.continent , countries.countryname , countries.* | model_list : model_list.maker , model_list.modelid , model_list.model ( amc ) , model_list.*",
    "output_sequence": "select _ from _ where _ | select cars_data.accelerate from cars_data where car_names.make = 'amc hornet sportabout (sw)'",
    "tc_original": [
      "car_names.*",
      "car_names.make",
      "car_names.makeid",
      "car_names.model",
      "cars_data.*",
      "cars_data.accelerate",
      "cars_data.weight",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "countries.*",
      "countries.countryid",
      "countries.continent",
      "countries.countryname",
      "model_list.*",
      "model_list.maker",
      "model_list.modelid",
      "model_list.model"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How much does the car accelerate that makes amc hornet sportabout (sw)? | car_names : car_names.make ( amc hornet , amc hornet sportabout (sw) ) , car_names.model ( amc ) , car_names.makeid , car_names.* | cars_data : cars_data.accelerate , cars_data.cylinders , cars_data.edispl , cars_data.horsepower , cars_data.id , cars_data.* | model_list : model_list.model ( amc ) , model_list.maker , model_list.modelid , model_list.* | car_makers : car_makers.id , car_makers.country , car_makers.maker ( amc ) , car_makers.fullname , car_makers.*",
    "output_sequence": "select _ from _ where _ | select cars_data.accelerate from cars_data where car_names.make = 'amc hornet sportabout (sw)'",
    "tc_original": [
      "car_names.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "cars_data.*",
      "cars_data.accelerate",
      "cars_data.cylinders",
      "cars_data.edispl",
      "cars_data.horsepower",
      "cars_data.id",
      "model_list.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "car_makers.*",
      "car_makers.id",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.fullname"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many car makers are there in france? | countries : countries.countryname ( france ) , countries.continent , countries.countryid , countries.* | car_makers : car_makers.id , car_makers.fullname , car_makers.country , car_makers.maker , car_makers.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( car_makers.* ) from car_makers where countries.countryname = 'france'",
    "tc_original": [
      "countries.*",
      "countries.countryname",
      "countries.continent",
      "countries.countryid",
      "car_makers.*",
      "car_makers.id",
      "car_makers.fullname",
      "car_makers.country",
      "car_makers.maker",
      "model_list.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the number of makers of care in France? | countries : countries.countryname ( france ) , countries.continent , countries.countryid , countries.* | car_makers : car_makers.id , car_makers.fullname , car_makers.maker , car_makers.country , car_makers.* | continents : continents.continent , continents.contid , continents.* | model_list : model_list.model , model_list.maker , model_list.modelid , model_list.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( car_makers.* ) from car_makers where countries.countryname = 'france'",
    "tc_original": [
      "countries.*",
      "countries.countryname",
      "countries.continent",
      "countries.countryid",
      "car_makers.*",
      "car_makers.id",
      "car_makers.fullname",
      "car_makers.maker",
      "car_makers.country",
      "continents.*",
      "continents.continent",
      "continents.contid",
      "model_list.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many car models are produced in the usa? | countries : countries.countryname ( usa ) , countries.continent , countries.countryid , countries.* | model_list : model_list.modelid , model_list.model , model_list.maker , model_list.* | cars_data : cars_data.year , cars_data.horsepower , cars_data.weight , cars_data.accelerate , cars_data.edispl , cars_data.* | continents : continents.contid , continents.continent , continents.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( model_list.* ) from model_list where countries.countryname = 'usa'",
    "tc_original": [
      "countries.*",
      "countries.countryname",
      "countries.continent",
      "countries.countryid",
      "model_list.*",
      "model_list.modelid",
      "model_list.model",
      "model_list.maker",
      "cars_data.*",
      "cars_data.year",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.edispl",
      "continents.*",
      "continents.contid",
      "continents.continent"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the count of the car models produced in the United States? | countries : countries.countryname , countries.continent , countries.countryid , countries.* | model_list : model_list.modelid , model_list.model , model_list.maker , model_list.* | cars_data : cars_data.horsepower , cars_data.edispl , cars_data.id , cars_data.cylinders , cars_data.mpg , cars_data.* | car_makers : car_makers.maker , car_makers.id , car_makers.country , car_makers.fullname , car_makers.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( model_list.* ) from model_list where countries.countryname = 'usa'",
    "tc_original": [
      "countries.*",
      "countries.countryname",
      "countries.continent",
      "countries.countryid",
      "model_list.*",
      "model_list.modelid",
      "model_list.model",
      "model_list.maker",
      "cars_data.*",
      "cars_data.horsepower",
      "cars_data.edispl",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.mpg",
      "car_makers.*",
      "car_makers.maker",
      "car_makers.id",
      "car_makers.country",
      "car_makers.fullname"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the average miles per gallon(mpg) of the cars with 4 cylinders? | model_list : model_list.modelid , model_list.model , model_list.maker , model_list.* | car_makers : car_makers.maker , car_makers.fullname , car_makers.id , car_makers.country , car_makers.* | cars_data : cars_data.mpg , cars_data.cylinders , cars_data.weight , cars_data.accelerate , cars_data.id , cars_data.* | countries : countries.countryid , countries.countryname , countries.continent , countries.*",
    "output_sequence": "select avg ( _ ) from _ where _ | select avg ( cars_data.mpg ) from cars_data where cars_data.cylinders = 4",
    "tc_original": [
      "model_list.*",
      "model_list.modelid",
      "model_list.model",
      "model_list.maker",
      "car_makers.*",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.id",
      "car_makers.country",
      "cars_data.*",
      "cars_data.mpg",
      "cars_data.cylinders",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.id",
      "countries.*",
      "countries.countryid",
      "countries.countryname",
      "countries.continent"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the average miles per gallon of all the cards with 4 cylinders? | cars_data : cars_data.mpg , cars_data.cylinders , cars_data.weight , cars_data.accelerate , cars_data.edispl , cars_data.* | car_makers : car_makers.id , car_makers.country , car_makers.maker , car_makers.fullname , car_makers.* | car_names : car_names.makeid , car_names.make , car_names.model , car_names.* | countries : countries.continent , countries.countryid , countries.countryname , countries.*",
    "output_sequence": "select avg ( _ ) from _ where _ | select avg ( cars_data.mpg ) from cars_data where cars_data.cylinders = 4",
    "tc_original": [
      "cars_data.*",
      "cars_data.mpg",
      "cars_data.cylinders",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.edispl",
      "car_makers.*",
      "car_makers.id",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.fullname",
      "car_names.*",
      "car_names.makeid",
      "car_names.make",
      "car_names.model",
      "countries.*",
      "countries.continent",
      "countries.countryid",
      "countries.countryname"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the smallest weight of the car produced with 8 cylinders on 1974 ? | cars_data : cars_data.cylinders , cars_data.weight , cars_data.year , cars_data.id , cars_data.accelerate , cars_data.* | car_names : car_names.make , car_names.model , car_names.makeid , car_names.* | continents : continents.contid , continents.continent , continents.* | countries : countries.continent , countries.countryname , countries.countryid , countries.*",
    "output_sequence": "select min ( _ ) from _ where _ | select min ( cars_data.weight ) from cars_data where cars_data.cylinders = 8 and cars_data.year = 1974",
    "tc_original": [
      "cars_data.*",
      "cars_data.cylinders",
      "cars_data.weight",
      "cars_data.year",
      "cars_data.id",
      "cars_data.accelerate",
      "car_names.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "continents.*",
      "continents.contid",
      "continents.continent",
      "countries.*",
      "countries.continent",
      "countries.countryname",
      "countries.countryid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the minimum weight of the car with 8 cylinders produced in 1974 ? | cars_data : cars_data.year , cars_data.id , cars_data.weight , cars_data.cylinders , cars_data.horsepower , cars_data.* | model_list : model_list.maker , model_list.modelid , model_list.model , model_list.* | car_makers : car_makers.maker , car_makers.fullname , car_makers.country , car_makers.id , car_makers.* | countries : countries.countryname , countries.continent , countries.countryid , countries.*",
    "output_sequence": "select min ( _ ) from _ where _ | select min ( cars_data.weight ) from cars_data where cars_data.cylinders = 8 and cars_data.year = 1974",
    "tc_original": [
      "cars_data.*",
      "cars_data.year",
      "cars_data.id",
      "cars_data.weight",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "model_list.*",
      "model_list.maker",
      "model_list.modelid",
      "model_list.model",
      "car_makers.*",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.country",
      "car_makers.id",
      "countries.*",
      "countries.countryname",
      "countries.continent",
      "countries.countryid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are all the makers and models? | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.* | car_names : car_names.makeid , car_names.make , car_names.model , car_names.* | continents : continents.continent , continents.contid , continents.* | car_makers : car_makers.fullname , car_makers.id , car_makers.country , car_makers.maker , car_makers.*",
    "output_sequence": "select _ from _ | select model_list.maker , model_list.model from model_list",
    "tc_original": [
      "model_list.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "car_names.*",
      "car_names.makeid",
      "car_names.make",
      "car_names.model",
      "continents.*",
      "continents.continent",
      "continents.contid",
      "car_makers.*",
      "car_makers.fullname",
      "car_makers.id",
      "car_makers.country",
      "car_makers.maker"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the makers and models? | model_list : model_list.model , model_list.maker , model_list.modelid , model_list.* | car_makers : car_makers.country , car_makers.maker , car_makers.fullname , car_makers.id , car_makers.* | car_names : car_names.model , car_names.makeid , car_names.make , car_names.* | countries : countries.countryname , countries.countryid , countries.continent , countries.*",
    "output_sequence": "select _ from _ | select model_list.maker , model_list.model from model_list",
    "tc_original": [
      "model_list.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "car_makers.*",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.id",
      "car_names.*",
      "car_names.model",
      "car_names.makeid",
      "car_names.make",
      "countries.*",
      "countries.countryname",
      "countries.countryid",
      "countries.continent"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the countries having at least one car maker? List name and id. | countries : countries.countryid , countries.countryname , countries.continent , countries.* | car_makers : car_makers.country , car_makers.maker , car_makers.id , car_makers.fullname , car_makers.* | cars_data : cars_data.mpg , cars_data.edispl , cars_data.cylinders , cars_data.accelerate , cars_data.year , cars_data.* | car_names : car_names.makeid , car_names.model , car_names.make , car_names.*",
    "output_sequence": "select _ from _ where count ( _ ) >= _ group by _ | select countries.countryname , countries.countryid from car_makers where count ( car_makers.* ) >= 1 group by countries.countryid",
    "tc_original": [
      "countries.*",
      "countries.countryid",
      "countries.countryname",
      "countries.continent",
      "car_makers.*",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.id",
      "car_makers.fullname",
      "cars_data.*",
      "cars_data.mpg",
      "cars_data.edispl",
      "cars_data.cylinders",
      "cars_data.accelerate",
      "cars_data.year",
      "car_names.*",
      "car_names.makeid",
      "car_names.model",
      "car_names.make"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the names and ids of all countries with at least one car maker? | countries : countries.countryid , countries.countryname , countries.continent , countries.* | car_makers : car_makers.country , car_makers.id , car_makers.maker , car_makers.fullname , car_makers.* | cars_data : cars_data.mpg , cars_data.cylinders , cars_data.edispl , cars_data.year , cars_data.weight , cars_data.* | model_list : model_list.modelid , model_list.maker , model_list.model , model_list.*",
    "output_sequence": "select _ from _ where count ( _ ) >= _ group by _ | select countries.countryname , countries.countryid from car_makers where count ( car_makers.* ) >= 1 group by countries.countryid",
    "tc_original": [
      "countries.*",
      "countries.countryid",
      "countries.countryname",
      "countries.continent",
      "car_makers.*",
      "car_makers.country",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.fullname",
      "cars_data.*",
      "cars_data.mpg",
      "cars_data.cylinders",
      "cars_data.edispl",
      "cars_data.year",
      "cars_data.weight",
      "model_list.*",
      "model_list.modelid",
      "model_list.maker",
      "model_list.model"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the number of the cars with horsepower more than 150? | cars_data : cars_data.horsepower , cars_data.cylinders , cars_data.year , cars_data.accelerate , cars_data.weight , cars_data.* | model_list : model_list.modelid , model_list.maker , model_list.model , model_list.* | car_makers : car_makers.country , car_makers.fullname , car_makers.id , car_makers.maker , car_makers.* | continents : continents.contid , continents.continent , continents.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( cars_data.* ) from cars_data where cars_data.horsepower > 150",
    "tc_original": [
      "cars_data.*",
      "cars_data.horsepower",
      "cars_data.cylinders",
      "cars_data.year",
      "cars_data.accelerate",
      "cars_data.weight",
      "model_list.*",
      "model_list.modelid",
      "model_list.maker",
      "model_list.model",
      "car_makers.*",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.id",
      "car_makers.maker",
      "continents.*",
      "continents.contid",
      "continents.continent"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the number of cars with a horsepower greater than 150? | cars_data : cars_data.horsepower , cars_data.edispl , cars_data.id , cars_data.accelerate , cars_data.cylinders , cars_data.* | countries : countries.countryname , countries.countryid , countries.continent , countries.* | model_list : model_list.modelid , model_list.maker , model_list.model , model_list.* | car_makers : car_makers.id , car_makers.country , car_makers.maker , car_makers.fullname , car_makers.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( cars_data.* ) from cars_data where cars_data.horsepower > 150",
    "tc_original": [
      "cars_data.*",
      "cars_data.horsepower",
      "cars_data.edispl",
      "cars_data.id",
      "cars_data.accelerate",
      "cars_data.cylinders",
      "countries.*",
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "model_list.*",
      "model_list.modelid",
      "model_list.maker",
      "model_list.model",
      "car_makers.*",
      "car_makers.id",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.fullname"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the average weight of cars each year? | cars_data : cars_data.mpg , cars_data.id , cars_data.weight , cars_data.year , cars_data.cylinders , cars_data.* | model_list : model_list.modelid , model_list.maker , model_list.model , model_list.* | car_makers : car_makers.maker , car_makers.country , car_makers.id , car_makers.fullname , car_makers.* | countries : countries.continent , countries.countryid , countries.countryname , countries.*",
    "output_sequence": "select avg ( _ ) , _ from _ group by _ | select avg ( cars_data.weight ) , cars_data.year from cars_data group by cars_data.year",
    "tc_original": [
      "cars_data.*",
      "cars_data.mpg",
      "cars_data.id",
      "cars_data.weight",
      "cars_data.year",
      "cars_data.cylinders",
      "model_list.*",
      "model_list.modelid",
      "model_list.maker",
      "model_list.model",
      "car_makers.*",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.id",
      "car_makers.fullname",
      "countries.*",
      "countries.continent",
      "countries.countryid",
      "countries.countryname"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the average weight and year for each year? | model_list : model_list.maker , model_list.modelid , model_list.model , model_list.* | car_names : car_names.make , car_names.makeid , car_names.model , car_names.* | countries : countries.countryid , countries.countryname , countries.continent , countries.* | cars_data : cars_data.weight , cars_data.year , cars_data.edispl , cars_data.cylinders , cars_data.mpg , cars_data.*",
    "output_sequence": "select avg ( _ ) , _ from _ group by _ | select avg ( cars_data.weight ) , cars_data.year from cars_data group by cars_data.year",
    "tc_original": [
      "model_list.*",
      "model_list.maker",
      "model_list.modelid",
      "model_list.model",
      "car_names.*",
      "car_names.make",
      "car_names.makeid",
      "car_names.model",
      "countries.*",
      "countries.countryid",
      "countries.countryname",
      "countries.continent",
      "cars_data.*",
      "cars_data.weight",
      "cars_data.year",
      "cars_data.edispl",
      "cars_data.cylinders",
      "cars_data.mpg"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Which countries in europe have at least 3 car manufacturers? | continents : continents.continent ( europe ) , continents.contid , continents.* | countries : countries.countryname , countries.continent , countries.countryid , countries.* | car_makers : car_makers.country , car_makers.id , car_makers.maker , car_makers.fullname , car_makers.* | car_names : car_names.make , car_names.model , car_names.makeid , car_names.*",
    "output_sequence": "select _ from _ where _ and count ( _ ) >= _ group by _ | select countries.countryname from car_makers where continents.continent = 'europe' and count ( car_makers.* ) >= 3 group by countries.countryname",
    "tc_original": [
      "continents.*",
      "continents.continent",
      "continents.contid",
      "countries.*",
      "countries.countryname",
      "countries.continent",
      "countries.countryid",
      "car_makers.*",
      "car_makers.country",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.fullname",
      "car_names.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the names of all European countries with at least 3 manufacturers? | continents : continents.continent ( europe ) , continents.contid , continents.* | countries : countries.countryname , countries.countryid , countries.continent , countries.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | cars_data : cars_data.id , cars_data.horsepower , cars_data.weight , cars_data.year , cars_data.mpg , cars_data.*",
    "output_sequence": "select _ from _ where _ and count ( _ ) >= _ group by _ | select countries.countryname from car_makers where continents.continent = 'europe' and count ( car_makers.* ) >= 3 group by countries.countryname",
    "tc_original": [
      "continents.*",
      "continents.continent",
      "continents.contid",
      "countries.*",
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "car_makers.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "cars_data.*",
      "cars_data.id",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.year",
      "cars_data.mpg"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the maximum horsepower and the make of the car models with 3 cylinders? | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.* | car_makers : car_makers.fullname , car_makers.id , car_makers.maker , car_makers.country , car_makers.* | car_names : car_names.make , car_names.makeid , car_names.model , car_names.* | cars_data : cars_data.cylinders , cars_data.horsepower , cars_data.weight , cars_data.id , cars_data.mpg , cars_data.*",
    "output_sequence": "select _ from _ where _ order by _ desc limit _ | select cars_data.horsepower , car_names.make from car_names where cars_data.cylinders = 3 order by cars_data.horsepower desc limit 1",
    "tc_original": [
      "model_list.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "car_makers.*",
      "car_makers.fullname",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_names.*",
      "car_names.make",
      "car_names.makeid",
      "car_names.model",
      "cars_data.*",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.id",
      "cars_data.mpg"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it? | model_list : model_list.model , model_list.modelid , model_list.maker , model_list.* | car_names : car_names.make , car_names.model , car_names.makeid , car_names.* | countries : countries.countryid , countries.countryname , countries.continent , countries.* | cars_data : cars_data.cylinders , cars_data.horsepower , cars_data.weight , cars_data.edispl , cars_data.year , cars_data.*",
    "output_sequence": "select _ from _ where _ order by _ desc limit _ | select cars_data.horsepower , car_names.make from car_names where cars_data.cylinders = 3 order by cars_data.horsepower desc limit 1",
    "tc_original": [
      "model_list.*",
      "model_list.model",
      "model_list.modelid",
      "model_list.maker",
      "car_names.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "countries.*",
      "countries.countryid",
      "countries.countryname",
      "countries.continent",
      "cars_data.*",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.edispl",
      "cars_data.year"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon. | countries : countries.countryid , countries.countryname , countries.continent , countries.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.* | cars_data : cars_data.mpg , cars_data.accelerate , cars_data.edispl , cars_data.weight , cars_data.id , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select _ from _ order by _ desc limit _ | select car_names.model from cars_data order by cars_data.mpg desc limit 1",
    "tc_original": [
      "countries.*",
      "countries.countryid",
      "countries.countryname",
      "countries.continent",
      "model_list.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "cars_data.*",
      "cars_data.mpg",
      "cars_data.accelerate",
      "cars_data.edispl",
      "cars_data.weight",
      "cars_data.id",
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the car model with the highest mpg ? | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | cars_data : cars_data.mpg , cars_data.horsepower , cars_data.edispl , cars_data.accelerate , cars_data.id , cars_data.* | model_list : model_list.modelid , model_list.model , model_list.maker , model_list.* | countries : countries.countryid , countries.continent , countries.countryname , countries.*",
    "output_sequence": "select _ from _ order by _ desc limit _ | select car_names.model from car_names order by cars_data.mpg desc limit 1",
    "tc_original": [
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "cars_data.*",
      "cars_data.mpg",
      "cars_data.horsepower",
      "cars_data.edispl",
      "cars_data.accelerate",
      "cars_data.id",
      "model_list.*",
      "model_list.modelid",
      "model_list.model",
      "model_list.maker",
      "countries.*",
      "countries.countryid",
      "countries.continent",
      "countries.countryname"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the average horsepower of the cars before 1980? | countries : countries.continent , countries.countryid , countries.countryname , countries.* | cars_data : cars_data.horsepower , cars_data.year , cars_data.edispl , cars_data.weight , cars_data.accelerate , cars_data.* | car_names : car_names.makeid , car_names.model , car_names.make , car_names.* | continents : continents.continent , continents.contid , continents.*",
    "output_sequence": "select avg ( _ ) from _ where _ | select avg ( cars_data.horsepower ) from cars_data where cars_data.year < 1980",
    "tc_original": [
      "countries.*",
      "countries.continent",
      "countries.countryid",
      "countries.countryname",
      "cars_data.*",
      "cars_data.horsepower",
      "cars_data.year",
      "cars_data.edispl",
      "cars_data.weight",
      "cars_data.accelerate",
      "car_names.*",
      "car_names.makeid",
      "car_names.model",
      "car_names.make",
      "continents.*",
      "continents.continent",
      "continents.contid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the average horsepower for all cars produced before 1980 ? | cars_data : cars_data.horsepower , cars_data.year , cars_data.edispl , cars_data.id , cars_data.weight , cars_data.* | countries : countries.countryname , countries.countryid , countries.continent , countries.* | car_makers : car_makers.maker , car_makers.id , car_makers.country , car_makers.fullname , car_makers.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select avg ( _ ) from _ where _ | select avg ( cars_data.horsepower ) from cars_data where cars_data.year < 1980",
    "tc_original": [
      "cars_data.*",
      "cars_data.horsepower",
      "cars_data.year",
      "cars_data.edispl",
      "cars_data.id",
      "cars_data.weight",
      "countries.*",
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "car_makers.*",
      "car_makers.maker",
      "car_makers.id",
      "car_makers.country",
      "car_makers.fullname",
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the average edispl of the cars of model volvo? | car_names : car_names.model ( volvo ) , car_names.make , car_names.makeid , car_names.* | cars_data : cars_data.edispl , cars_data.accelerate , cars_data.cylinders , cars_data.weight , cars_data.year , cars_data.* | continents : continents.contid , continents.continent , continents.* | countries : countries.continent , countries.countryname , countries.countryid , countries.*",
    "output_sequence": "select avg ( _ ) from _ where _ | select avg ( cars_data.edispl ) from car_names where car_names.model = 'volvo'",
    "tc_original": [
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "cars_data.*",
      "cars_data.edispl",
      "cars_data.accelerate",
      "cars_data.cylinders",
      "cars_data.weight",
      "cars_data.year",
      "continents.*",
      "continents.contid",
      "continents.continent",
      "countries.*",
      "countries.continent",
      "countries.countryname",
      "countries.countryid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the average edispl for all volvos? | car_names : car_names.model ( volvo ) , car_names.make , car_names.makeid , car_names.* | cars_data : cars_data.edispl , cars_data.cylinders , cars_data.horsepower , cars_data.year , cars_data.weight , cars_data.* | model_list : model_list.modelid , model_list.model ( volvo ) , model_list.maker , model_list.* | continents : continents.contid , continents.continent , continents.*",
    "output_sequence": "select avg ( _ ) from _ where _ | select avg ( cars_data.edispl ) from car_names where car_names.model = 'volvo'",
    "tc_original": [
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "cars_data.*",
      "cars_data.edispl",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.year",
      "cars_data.weight",
      "model_list.*",
      "model_list.modelid",
      "model_list.model",
      "model_list.maker",
      "continents.*",
      "continents.contid",
      "continents.continent"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the maximum accelerate for different number of cylinders? | cars_data : cars_data.cylinders , cars_data.accelerate , cars_data.weight , cars_data.horsepower , cars_data.year , cars_data.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.* | car_names : car_names.make , car_names.model , car_names.makeid , car_names.* | countries : countries.countryid , countries.countryname , countries.continent , countries.*",
    "output_sequence": "select max ( _ ) , _ from _ group by _ | select max ( cars_data.accelerate ) , cars_data.cylinders from cars_data group by cars_data.cylinders",
    "tc_original": [
      "cars_data.*",
      "cars_data.cylinders",
      "cars_data.accelerate",
      "cars_data.weight",
      "cars_data.horsepower",
      "cars_data.year",
      "model_list.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "car_names.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "countries.*",
      "countries.countryid",
      "countries.countryname",
      "countries.continent"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the maximum accelerate for all the different cylinders? | cars_data : cars_data.cylinders , cars_data.accelerate , cars_data.year , cars_data.mpg , cars_data.horsepower , cars_data.* | model_list : model_list.model , model_list.maker , model_list.modelid , model_list.* | car_names : car_names.make , car_names.makeid , car_names.model , car_names.* | car_makers : car_makers.maker , car_makers.fullname , car_makers.id , car_makers.country , car_makers.*",
    "output_sequence": "select max ( _ ) , _ from _ group by _ | select max ( cars_data.accelerate ) , cars_data.cylinders from cars_data group by cars_data.cylinders",
    "tc_original": [
      "cars_data.*",
      "cars_data.cylinders",
      "cars_data.accelerate",
      "cars_data.year",
      "cars_data.mpg",
      "cars_data.horsepower",
      "model_list.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "car_names.*",
      "car_names.make",
      "car_names.makeid",
      "car_names.model",
      "car_makers.*",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.id",
      "car_makers.country"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Which model has the most version(make) of cars? | car_names : car_names.model , car_names.makeid , car_names.make , car_names.* | countries : countries.countryid , countries.countryname , countries.continent , countries.* | continents : continents.contid , continents.continent , continents.* | cars_data : cars_data.accelerate , cars_data.cylinders , cars_data.weight , cars_data.edispl , cars_data.id , cars_data.*",
    "output_sequence": "select _ from _ group by _ order by count ( _ ) desc limit _ | select car_names.model from car_names group by car_names.model order by count ( car_names.* ) desc limit 1",
    "tc_original": [
      "car_names.*",
      "car_names.model",
      "car_names.makeid",
      "car_names.make",
      "countries.*",
      "countries.countryid",
      "countries.countryname",
      "countries.continent",
      "continents.*",
      "continents.contid",
      "continents.continent",
      "cars_data.*",
      "cars_data.accelerate",
      "cars_data.cylinders",
      "cars_data.weight",
      "cars_data.edispl",
      "cars_data.id"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What model has the most different versions? | car_names : car_names.model , car_names.makeid , car_names.make , car_names.* | countries : countries.countryname , countries.countryid , countries.continent , countries.* | car_makers : car_makers.maker , car_makers.country , car_makers.id , car_makers.fullname , car_makers.* | continents : continents.continent , continents.contid , continents.*",
    "output_sequence": "select _ from _ group by _ order by count ( _ ) desc limit _ | select car_names.model from car_names group by car_names.model order by count ( car_names.* ) desc limit 1",
    "tc_original": [
      "car_names.*",
      "car_names.model",
      "car_names.makeid",
      "car_names.make",
      "countries.*",
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "car_makers.*",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.id",
      "car_makers.fullname",
      "continents.*",
      "continents.continent",
      "continents.contid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many cars have more than 4 cylinders? | cars_data : cars_data.horsepower , cars_data.cylinders , cars_data.weight , cars_data.mpg , cars_data.accelerate , cars_data.* | car_makers : car_makers.maker , car_makers.id , car_makers.fullname , car_makers.country , car_makers.* | model_list : model_list.modelid , model_list.maker , model_list.model , model_list.* | continents : continents.continent , continents.contid , continents.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( cars_data.* ) from cars_data where cars_data.cylinders > 4",
    "tc_original": [
      "cars_data.*",
      "cars_data.horsepower",
      "cars_data.cylinders",
      "cars_data.weight",
      "cars_data.mpg",
      "cars_data.accelerate",
      "car_makers.*",
      "car_makers.maker",
      "car_makers.id",
      "car_makers.fullname",
      "car_makers.country",
      "model_list.*",
      "model_list.modelid",
      "model_list.maker",
      "model_list.model",
      "continents.*",
      "continents.continent",
      "continents.contid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the number of cars with more than 4 cylinders? | cars_data : cars_data.cylinders , cars_data.id , cars_data.horsepower , cars_data.edispl , cars_data.weight , cars_data.* | model_list : model_list.modelid , model_list.model , model_list.maker , model_list.* | car_makers : car_makers.country , car_makers.maker , car_makers.id , car_makers.fullname , car_makers.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( cars_data.* ) from cars_data where cars_data.cylinders > 4",
    "tc_original": [
      "cars_data.*",
      "cars_data.cylinders",
      "cars_data.id",
      "cars_data.horsepower",
      "cars_data.edispl",
      "cars_data.weight",
      "model_list.*",
      "model_list.modelid",
      "model_list.model",
      "model_list.maker",
      "car_makers.*",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.id",
      "car_makers.fullname",
      "car_names.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "how many cars were produced in 1980? | cars_data : cars_data.weight , cars_data.cylinders , cars_data.accelerate , cars_data.edispl , cars_data.year , cars_data.* | car_makers : car_makers.maker , car_makers.country , car_makers.id , car_makers.fullname , car_makers.* | car_names : car_names.model , car_names.makeid , car_names.make , car_names.* | model_list : model_list.maker , model_list.modelid , model_list.model , model_list.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( cars_data.* ) from cars_data where cars_data.year = 1980",
    "tc_original": [
      "cars_data.*",
      "cars_data.weight",
      "cars_data.cylinders",
      "cars_data.accelerate",
      "cars_data.edispl",
      "cars_data.year",
      "car_makers.*",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.id",
      "car_makers.fullname",
      "car_names.*",
      "car_names.model",
      "car_names.makeid",
      "car_names.make",
      "model_list.*",
      "model_list.maker",
      "model_list.modelid",
      "model_list.model"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "In 1980, how many cars were made? | cars_data : cars_data.year , cars_data.mpg , cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.* | continents : continents.contid , continents.continent , continents.* | car_makers : car_makers.country , car_makers.maker , car_makers.id , car_makers.fullname , car_makers.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( cars_data.* ) from cars_data where cars_data.year = 1980",
    "tc_original": [
      "cars_data.*",
      "cars_data.year",
      "cars_data.mpg",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "model_list.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "continents.*",
      "continents.contid",
      "continents.continent",
      "car_makers.*",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.id",
      "car_makers.fullname"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many car models were produced by the maker with full name American Motor Company? | car_makers : car_makers.fullname ( American Motor Company ) , car_makers.country , car_makers.id , car_makers.maker , car_makers.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.* | cars_data : cars_data.edispl , cars_data.accelerate , cars_data.weight , cars_data.year , cars_data.cylinders , cars_data.* | countries : countries.continent , countries.countryid , countries.countryname , countries.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( model_list.* ) from model_list where car_makers.fullname = 'American Motor Company'",
    "tc_original": [
      "car_makers.*",
      "car_makers.fullname",
      "car_makers.country",
      "car_makers.id",
      "car_makers.maker",
      "model_list.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "cars_data.*",
      "cars_data.edispl",
      "cars_data.accelerate",
      "cars_data.weight",
      "cars_data.year",
      "cars_data.cylinders",
      "countries.*",
      "countries.continent",
      "countries.countryid",
      "countries.countryname"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the number of car models created by the car maker American Motor Company? | car_makers : car_makers.fullname ( American Motor Company ) , car_makers.id , car_makers.maker , car_makers.country , car_makers.* | model_list : model_list.model , model_list.maker , model_list.modelid , model_list.* | continents : continents.continent ( america ) , continents.contid , continents.* | countries : countries.countryid , countries.countryname , countries.continent , countries.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( model_list.* ) from model_list where car_makers.fullname = 'American Motor Company'",
    "tc_original": [
      "car_makers.*",
      "car_makers.fullname",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "model_list.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "continents.*",
      "continents.continent",
      "continents.contid",
      "countries.*",
      "countries.countryid",
      "countries.countryname",
      "countries.continent"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Which makers designed more than 3 car models? List full name and the id. | car_makers : car_makers.maker , car_makers.fullname , car_makers.country , car_makers.id , car_makers.* | model_list : model_list.modelid , model_list.model , model_list.maker , model_list.* | countries : countries.countryid , countries.continent , countries.countryname , countries.* | car_names : car_names.makeid , car_names.model , car_names.make , car_names.*",
    "output_sequence": "select _ from _ where count ( _ ) > _ group by _ | select car_makers.fullname , car_makers.id from model_list where count ( model_list.* ) > 3 group by car_makers.id",
    "tc_original": [
      "car_makers.*",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.country",
      "car_makers.id",
      "model_list.*",
      "model_list.modelid",
      "model_list.model",
      "model_list.maker",
      "countries.*",
      "countries.countryid",
      "countries.continent",
      "countries.countryname",
      "car_names.*",
      "car_names.makeid",
      "car_names.model",
      "car_names.make"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the names and ids of all makers with more than 3 models? | car_makers : car_makers.id , car_makers.fullname , car_makers.maker , car_makers.country , car_makers.* | model_list : model_list.model , model_list.modelid , model_list.maker , model_list.* | countries : countries.continent , countries.countryname , countries.countryid , countries.* | cars_data : cars_data.edispl , cars_data.accelerate , cars_data.cylinders , cars_data.id , cars_data.weight , cars_data.*",
    "output_sequence": "select _ from _ where count ( _ ) > _ group by _ | select car_makers.fullname , car_makers.id from model_list where count ( model_list.* ) > 3 group by car_makers.id",
    "tc_original": [
      "car_makers.*",
      "car_makers.id",
      "car_makers.fullname",
      "car_makers.maker",
      "car_makers.country",
      "model_list.*",
      "model_list.model",
      "model_list.modelid",
      "model_list.maker",
      "countries.*",
      "countries.continent",
      "countries.countryname",
      "countries.countryid",
      "cars_data.*",
      "cars_data.edispl",
      "cars_data.accelerate",
      "cars_data.cylinders",
      "cars_data.id",
      "cars_data.weight"
    ]
  }
]