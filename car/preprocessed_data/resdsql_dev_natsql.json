[
  {
    "db_id": "car_1",
    "input_sequence": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500? | car_makers : car_makers.fullname ( General Motors ) , car_makers.maker , car_makers.id , car_makers.country , car_makers.* | model_list : model_list.model , model_list.maker , model_list.modelid , model_list.* | cars_data : cars_data.weight , cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.accelerate , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select distinct _ from _ where _ | select distinct model_list.model from car_names where car_makers.fullname = 'General Motors' or cars_data.weight > 3500",
    "tc_original": [
      "car_makers.fullname",
      "car_makers.maker",
      "car_makers.id",
      "car_makers.country",
      "car_makers.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "model_list.*",
      "cars_data.weight",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.accelerate",
      "cars_data.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the different models created by either the car maker General Motors or weighed more than 3500? | car_makers : car_makers.fullname ( General Motors ) , car_makers.maker , car_makers.id , car_makers.country , car_makers.* | model_list : model_list.model , model_list.maker , model_list.modelid , model_list.* | cars_data : cars_data.weight , cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.accelerate , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select distinct _ from _ where _ | select distinct model_list.model from car_names where car_makers.fullname = 'General Motors' or cars_data.weight > 3500",
    "tc_original": [
      "car_makers.fullname",
      "car_makers.maker",
      "car_makers.id",
      "car_makers.country",
      "car_makers.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "model_list.*",
      "cars_data.weight",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.accelerate",
      "cars_data.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "In which years cars were produced weighing no less than 3000 and no more than 4000 ? | cars_data : cars_data.year , cars_data.weight , cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select distinct _ from _ where _ between _ and _ | select distinct cars_data.year from cars_data where cars_data.weight between 3000 and 4000",
    "tc_original": [
      "cars_data.year",
      "cars_data.weight",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ? | cars_data : cars_data.weight , cars_data.year , cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select distinct _ from _ where _ between _ and _ | select distinct cars_data.year from cars_data where cars_data.weight between 3000 and 4000",
    "tc_original": [
      "cars_data.weight",
      "cars_data.year",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the horsepower of the car with the largest accelerate? | cars_data : cars_data.horsepower , cars_data.accelerate , cars_data.id , cars_data.cylinders , cars_data.weight , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select _ from _ order by _ desc limit _ | select cars_data.horsepower from cars_data order by cars_data.accelerate desc limit 1",
    "tc_original": [
      "cars_data.horsepower",
      "cars_data.accelerate",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.weight",
      "cars_data.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the horsepower of the car with the greatest accelerate? | cars_data : cars_data.horsepower , cars_data.accelerate , cars_data.id , cars_data.cylinders , cars_data.weight , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select _ from _ order by _ desc limit _ | select cars_data.horsepower from cars_data order by cars_data.accelerate desc limit 1",
    "tc_original": [
      "cars_data.horsepower",
      "cars_data.accelerate",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.weight",
      "cars_data.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "For model volvo, how many cylinders does the car with the least accelerate have? | cars_data : cars_data.accelerate , cars_data.cylinders , cars_data.year , cars_data.id , cars_data.horsepower , cars_data.* | model_list : model_list.model ( volvo ) , model_list.maker , model_list.modelid , model_list.* | car_names : car_names.model ( volvo ) , car_names.make , car_names.makeid , car_names.* | car_makers : car_makers.id , car_makers.fullname ( Volvo ) , car_makers.country , car_makers.maker ( volvo ) , car_makers.*",
    "output_sequence": "select _ from _ where _ order by _ asc limit _ | select cars_data.cylinders from cars_data where car_names.model = 'volvo' order by cars_data.accelerate asc limit 1",
    "tc_original": [
      "cars_data.accelerate",
      "cars_data.cylinders",
      "cars_data.year",
      "cars_data.id",
      "cars_data.horsepower",
      "cars_data.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "model_list.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "car_makers.id",
      "car_makers.fullname",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "For a volvo model, how many cylinders does the version with least accelerate have? | model_list : model_list.model ( volvo ) , model_list.maker , model_list.modelid , model_list.* | cars_data : cars_data.accelerate , cars_data.cylinders , cars_data.id , cars_data.year , cars_data.horsepower , cars_data.* | car_names : car_names.model ( volvo ) , car_names.make , car_names.makeid , car_names.* | car_makers : car_makers.id , car_makers.fullname ( Volvo ) , car_makers.country , car_makers.maker ( volvo ) , car_makers.*",
    "output_sequence": "select _ from _ where _ order by _ asc limit _ | select cars_data.cylinders from cars_data where car_names.model = 'volvo' order by cars_data.accelerate asc limit 1",
    "tc_original": [
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "model_list.*",
      "cars_data.accelerate",
      "cars_data.cylinders",
      "cars_data.id",
      "cars_data.year",
      "cars_data.horsepower",
      "cars_data.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "car_makers.id",
      "car_makers.fullname",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many cars have a larger accelerate than the car with the largest horsepower? | cars_data : cars_data.horsepower , cars_data.accelerate , cars_data.id , cars_data.cylinders , cars_data.weight , cars_data.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select count ( _ ) from _ where @.@ > _ order by _ desc limit _ | select count ( cars_data.* ) from cars_data where @.@ > cars_data.accelerate order by cars_data.horsepower desc limit 1",
    "tc_original": [
      "cars_data.horsepower",
      "cars_data.accelerate",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.weight",
      "cars_data.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the number of cars with a greater accelerate than the one with the most horsepower? | cars_data : cars_data.accelerate , cars_data.horsepower , cars_data.id , cars_data.cylinders , cars_data.weight , cars_data.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select count ( _ ) from _ where @.@ > _ order by _ desc limit _ | select count ( cars_data.* ) from cars_data where @.@ > cars_data.accelerate order by cars_data.horsepower desc limit 1",
    "tc_original": [
      "cars_data.accelerate",
      "cars_data.horsepower",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.weight",
      "cars_data.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many countries has more than 2 car makers ? | car_makers : car_makers.country , car_makers.id , car_makers.maker , car_makers.fullname , car_makers.* | countries : countries.continent , countries.countryid , countries.countryname , countries.* | cars_data : cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.weight , cars_data.accelerate , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select count ( _ ) from _ where count ( _ ) > _ | select count ( countries.* ) from countries where count ( car_makers.* ) > 2",
    "tc_original": [
      "car_makers.country",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.*",
      "countries.continent",
      "countries.countryid",
      "countries.countryname",
      "countries.*",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the number of countries with more than 2 car makers ? | car_makers : car_makers.country , car_makers.id , car_makers.maker , car_makers.fullname , car_makers.* | countries : countries.countryid , countries.continent , countries.countryname , countries.* | cars_data : cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.weight , cars_data.accelerate , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select count ( _ ) from _ where count ( _ ) > _ | select count ( countries.* ) from countries where count ( car_makers.* ) > 2",
    "tc_original": [
      "car_makers.country",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.*",
      "countries.countryid",
      "countries.continent",
      "countries.countryname",
      "countries.*",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "How many cars has over 6 cylinders? | cars_data : cars_data.cylinders , cars_data.id , cars_data.horsepower , cars_data.weight , cars_data.accelerate , cars_data.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( cars_data.* ) from cars_data where cars_data.cylinders > 6",
    "tc_original": [
      "cars_data.cylinders",
      "cars_data.id",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the number of carsw ith over 6 cylinders? | cars_data : cars_data.cylinders , cars_data.id , cars_data.horsepower , cars_data.weight , cars_data.accelerate , cars_data.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select count ( _ ) from _ where _ | select count ( cars_data.* ) from cars_data where cars_data.cylinders > 6",
    "tc_original": [
      "cars_data.cylinders",
      "cars_data.id",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "For the cars with 4 cylinders, which model has the largest horsepower? | cars_data : cars_data.cylinders , cars_data.horsepower , cars_data.id , cars_data.weight , cars_data.accelerate , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | model_list : model_list.model , model_list.maker , model_list.modelid , model_list.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.*",
    "output_sequence": "select _ from _ where _ order by _ desc limit _ | select car_names.model from car_names where cars_data.cylinders = 4 order by cars_data.horsepower desc limit 1",
    "tc_original": [
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.id",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "model_list.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "For all of the 4 cylinder cars, which model has the most horsepower? | cars_data : cars_data.horsepower , cars_data.cylinders , cars_data.id , cars_data.weight , cars_data.accelerate , cars_data.* | model_list : model_list.model , model_list.maker , model_list.modelid , model_list.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.*",
    "output_sequence": "select _ from _ where _ order by _ desc limit _ | select car_names.model from car_names where cars_data.cylinders = 4 order by cars_data.horsepower desc limit 1",
    "tc_original": [
      "cars_data.horsepower",
      "cars_data.cylinders",
      "cars_data.id",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "model_list.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name. | cars_data : cars_data.horsepower , cars_data.cylinders , cars_data.id , cars_data.weight , cars_data.accelerate , cars_data.* | car_names : car_names.make , car_names.makeid , car_names.model , car_names.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select _ from _ where _ and @.@ > min ( _ ) | select car_names.makeid , car_names.make from cars_data where cars_data.cylinders <= 3 and @.@ > min ( cars_data.horsepower )",
    "tc_original": [
      "cars_data.horsepower",
      "cars_data.cylinders",
      "cars_data.id",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*",
      "car_names.make",
      "car_names.makeid",
      "car_names.model",
      "car_names.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ? | car_names : car_names.make , car_names.makeid , car_names.model , car_names.* | cars_data : cars_data.horsepower , cars_data.cylinders , cars_data.id , cars_data.weight , cars_data.accelerate , cars_data.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select _ from _ where _ and @.@ > min ( _ ) | select car_names.makeid , car_names.make from cars_data where cars_data.cylinders < 4 and @.@ > min ( cars_data.horsepower )",
    "tc_original": [
      "car_names.make",
      "car_names.makeid",
      "car_names.model",
      "car_names.*",
      "cars_data.horsepower",
      "cars_data.cylinders",
      "cars_data.id",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ? | cars_data : cars_data.mpg , cars_data.year , cars_data.cylinders , cars_data.id , cars_data.horsepower , cars_data.* | car_names : car_names.make , car_names.model , car_names.makeid , car_names.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select max ( _ ) from _ where _ | select max ( cars_data.mpg ) from cars_data where cars_data.cylinders = 8 or cars_data.year < 1980",
    "tc_original": [
      "cars_data.mpg",
      "cars_data.year",
      "cars_data.cylinders",
      "cars_data.id",
      "cars_data.horsepower",
      "cars_data.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "car_names.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ? | cars_data : cars_data.mpg , cars_data.year , cars_data.cylinders , cars_data.id , cars_data.horsepower , cars_data.* | car_names : car_names.make , car_names.model , car_names.makeid , car_names.* | car_makers : car_makers.id , car_makers.maker , car_makers.country , car_makers.fullname , car_makers.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.*",
    "output_sequence": "select max ( _ ) from _ where _ | select max ( cars_data.mpg ) from cars_data where cars_data.cylinders = 8 or cars_data.year < 1980",
    "tc_original": [
      "cars_data.mpg",
      "cars_data.year",
      "cars_data.cylinders",
      "cars_data.id",
      "cars_data.horsepower",
      "cars_data.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "car_names.*",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'? | car_makers : car_makers.fullname ( Ford Motor Company ) , car_makers.id , car_makers.country , car_makers.maker ( ford ) , car_makers.* | model_list : model_list.model ( ford ) , model_list.maker , model_list.modelid , model_list.* | cars_data : cars_data.weight , cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.accelerate , cars_data.* | car_names : car_names.make , car_names.model ( ford ) , car_names.makeid , car_names.*",
    "output_sequence": "select distinct _ from _ where _ | select distinct model_list.model from model_list where cars_data.weight < 3500 and car_makers.fullname != 'Ford Motor Company'",
    "tc_original": [
      "car_makers.fullname",
      "car_makers.id",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "model_list.*",
      "cars_data.weight",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.accelerate",
      "cars_data.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "car_names.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company? | car_makers : car_makers.fullname ( Ford Motor Company ) , car_makers.maker ( ford ) , car_makers.id , car_makers.country , car_makers.* | model_list : model_list.model ( ford ) , model_list.maker , model_list.modelid , model_list.* | cars_data : cars_data.weight , cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.accelerate , cars_data.* | car_names : car_names.make , car_names.model ( ford ) , car_names.makeid , car_names.*",
    "output_sequence": "select distinct _ from _ where _ | select distinct model_list.model from model_list where cars_data.weight < 3500 and car_makers.fullname != 'Ford Motor Company'",
    "tc_original": [
      "car_makers.fullname",
      "car_makers.maker",
      "car_makers.id",
      "car_makers.country",
      "car_makers.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "model_list.*",
      "cars_data.weight",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.accelerate",
      "cars_data.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "car_names.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the name of the countries where there is not a single car maker? | countries : countries.countryname , countries.continent , countries.countryid , countries.* | car_makers : car_makers.country , car_makers.id , car_makers.maker , car_makers.fullname , car_makers.* | cars_data : cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.weight , cars_data.accelerate , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select _ from _ where except_ @.@ is _ | select countries.countryname from countries where except_ @.@ is car_makers.*",
    "tc_original": [
      "countries.countryname",
      "countries.continent",
      "countries.countryid",
      "countries.*",
      "car_makers.country",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.*",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the names of the countries with no car makers? | countries : countries.countryname , countries.continent , countries.countryid , countries.* | car_makers : car_makers.country , car_makers.id , car_makers.maker , car_makers.fullname , car_makers.* | cars_data : cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.weight , cars_data.accelerate , cars_data.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select _ from _ where except_ @.@ is _ | select countries.countryname from countries where except_ @.@ is car_makers.*",
    "tc_original": [
      "countries.countryname",
      "countries.continent",
      "countries.countryid",
      "countries.*",
      "car_makers.country",
      "car_makers.id",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.*",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker . | car_makers : car_makers.maker , car_makers.id , car_makers.country , car_makers.fullname , car_makers.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.* | car_names : car_names.model , car_names.make , car_names.makeid , car_names.* | cars_data : cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.weight , cars_data.accelerate , cars_data.*",
    "output_sequence": "select _ from _ where count ( _ ) >= _ and count ( _ ) > _ group by _ | select car_makers.id , car_makers.maker from car_makers where count ( model_list.* ) >= 2 and count ( car_names.* ) > 3 group by car_makers.id",
    "tc_original": [
      "car_makers.maker",
      "car_makers.id",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars? | car_makers : car_makers.maker , car_makers.id , car_makers.country , car_makers.fullname , car_makers.* | model_list : model_list.maker , model_list.model , model_list.modelid , model_list.* | car_names : car_names.make , car_names.model , car_names.makeid , car_names.* | cars_data : cars_data.id , cars_data.cylinders , cars_data.horsepower , cars_data.weight , cars_data.accelerate , cars_data.*",
    "output_sequence": "select _ from _ where count ( _ ) >= _ and count ( _ ) > _ group by _ | select car_makers.id , car_makers.maker from car_makers where count ( model_list.* ) >= 2 and count ( car_names.* ) > 3 group by car_makers.id",
    "tc_original": [
      "car_makers.maker",
      "car_makers.id",
      "car_makers.country",
      "car_makers.fullname",
      "car_makers.*",
      "model_list.maker",
      "model_list.model",
      "model_list.modelid",
      "model_list.*",
      "car_names.make",
      "car_names.model",
      "car_names.makeid",
      "car_names.*",
      "cars_data.id",
      "cars_data.cylinders",
      "cars_data.horsepower",
      "cars_data.weight",
      "cars_data.accelerate",
      "cars_data.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model? | countries : countries.countryname , countries.countryid , countries.continent , countries.* | car_makers : car_makers.id , car_makers.fullname ( Fiat ) , car_makers.country , car_makers.maker ( fiat ) , car_makers.* | model_list : model_list.model ( fiat ) , model_list.maker , model_list.modelid , model_list.* | car_names : car_names.model ( fiat ) , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select _ from _ where count ( _ ) > _ or _ group by _ | select countries.countryid , countries.countryname from countries where count ( car_makers.* ) > 3 or model_list.model = 'fiat' group by countries.countryid",
    "tc_original": [
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "countries.*",
      "car_makers.id",
      "car_makers.fullname",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "model_list.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*"
    ]
  },
  {
    "db_id": "car_1",
    "input_sequence": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ? | countries : countries.countryname , countries.countryid , countries.continent , countries.* | model_list : model_list.model ( fiat ) , model_list.maker , model_list.modelid , model_list.* | car_makers : car_makers.id , car_makers.country , car_makers.maker ( fiat ) , car_makers.fullname ( Fiat ) , car_makers.* | car_names : car_names.model ( fiat ) , car_names.make , car_names.makeid , car_names.*",
    "output_sequence": "select _ from _ where count ( _ ) > _ or _ group by _ | select countries.countryid , countries.countryname from car_makers where count ( car_makers.* ) > 3 or model_list.model = 'fiat' group by countries.countryid",
    "tc_original": [
      "countries.countryname",
      "countries.countryid",
      "countries.continent",
      "countries.*",
      "model_list.model",
      "model_list.maker",
      "model_list.modelid",
      "model_list.*",
      "car_makers.id",
      "car_makers.country",
      "car_makers.maker",
      "car_makers.fullname",
      "car_makers.*",
      "car_names.model",
      "car_names.make",
      "car_names.makeid",
      "car_names.*"
    ]
  }
]